ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"ADC.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.ADC_CalcGain,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  22              		.type	ADC_CalcGain, %function
  23              	ADC_CalcGain:
  24              	.LFB12:
  25              		.file 1 ".\\Generated_Source\\PSoC5\\ADC.c"
   1:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/ADC.c **** * File Name: ADC.c
   3:.\Generated_Source\PSoC5/ADC.c **** * Version 3.0
   4:.\Generated_Source\PSoC5/ADC.c **** *
   5:.\Generated_Source\PSoC5/ADC.c **** * Description:
   6:.\Generated_Source\PSoC5/ADC.c **** *  This file provides the source code to the API for the Successive
   7:.\Generated_Source\PSoC5/ADC.c **** *  approximation ADC Component.
   8:.\Generated_Source\PSoC5/ADC.c **** *
   9:.\Generated_Source\PSoC5/ADC.c **** * Note:
  10:.\Generated_Source\PSoC5/ADC.c **** *
  11:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/ADC.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/ADC.c **** 
  18:.\Generated_Source\PSoC5/ADC.c **** #include "CyLib.h"
  19:.\Generated_Source\PSoC5/ADC.c **** #include "ADC.h"
  20:.\Generated_Source\PSoC5/ADC.c **** 
  21:.\Generated_Source\PSoC5/ADC.c **** #if(ADC_DEFAULT_INTERNAL_CLK)
  22:.\Generated_Source\PSoC5/ADC.c ****     #include "ADC_theACLK.h"
  23:.\Generated_Source\PSoC5/ADC.c **** #endif /* End ADC_DEFAULT_INTERNAL_CLK */
  24:.\Generated_Source\PSoC5/ADC.c **** 
  25:.\Generated_Source\PSoC5/ADC.c **** 
  26:.\Generated_Source\PSoC5/ADC.c **** /***************************************
  27:.\Generated_Source\PSoC5/ADC.c **** * Forward function references
  28:.\Generated_Source\PSoC5/ADC.c **** ***************************************/
  29:.\Generated_Source\PSoC5/ADC.c **** static void ADC_CalcGain(uint8 resolution);
  30:.\Generated_Source\PSoC5/ADC.c **** 
  31:.\Generated_Source\PSoC5/ADC.c **** 
  32:.\Generated_Source\PSoC5/ADC.c **** /***************************************
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 2


  33:.\Generated_Source\PSoC5/ADC.c **** * Global data allocation
  34:.\Generated_Source\PSoC5/ADC.c **** ***************************************/
  35:.\Generated_Source\PSoC5/ADC.c **** uint8 ADC_initVar = 0u;
  36:.\Generated_Source\PSoC5/ADC.c **** volatile int16 ADC_offset;
  37:.\Generated_Source\PSoC5/ADC.c **** volatile int16 ADC_countsPerVolt;     /* Obsolete Gain compensation */
  38:.\Generated_Source\PSoC5/ADC.c **** volatile int32 ADC_countsPer10Volt;   /* Gain compensation */
  39:.\Generated_Source\PSoC5/ADC.c **** volatile int16 ADC_shift;
  40:.\Generated_Source\PSoC5/ADC.c **** 
  41:.\Generated_Source\PSoC5/ADC.c **** 
  42:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
  43:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Start
  44:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
  45:.\Generated_Source\PSoC5/ADC.c **** *
  46:.\Generated_Source\PSoC5/ADC.c **** * Summary:
  47:.\Generated_Source\PSoC5/ADC.c **** *  This is the preferred method to begin component operation.
  48:.\Generated_Source\PSoC5/ADC.c **** *  ADC_Start() sets the initVar variable, calls the
  49:.\Generated_Source\PSoC5/ADC.c **** *  ADC_Init() function, and then calls the
  50:.\Generated_Source\PSoC5/ADC.c **** *  ADC_Enable() function.
  51:.\Generated_Source\PSoC5/ADC.c **** *
  52:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
  53:.\Generated_Source\PSoC5/ADC.c **** *  None.
  54:.\Generated_Source\PSoC5/ADC.c **** *
  55:.\Generated_Source\PSoC5/ADC.c **** * Return:
  56:.\Generated_Source\PSoC5/ADC.c **** *  None.
  57:.\Generated_Source\PSoC5/ADC.c **** *
  58:.\Generated_Source\PSoC5/ADC.c **** * Global variables:
  59:.\Generated_Source\PSoC5/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  60:.\Generated_Source\PSoC5/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  61:.\Generated_Source\PSoC5/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  62:.\Generated_Source\PSoC5/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  63:.\Generated_Source\PSoC5/ADC.c **** *  ADC_Start() routine.
  64:.\Generated_Source\PSoC5/ADC.c **** *  If re-initialization of the component is required the variable should be set
  65:.\Generated_Source\PSoC5/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  66:.\Generated_Source\PSoC5/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  67:.\Generated_Source\PSoC5/ADC.c **** *  ADC_Start() routine.
  68:.\Generated_Source\PSoC5/ADC.c **** *
  69:.\Generated_Source\PSoC5/ADC.c **** * Side Effect:
  70:.\Generated_Source\PSoC5/ADC.c **** *  If the initVar variable is already set, this function only calls the
  71:.\Generated_Source\PSoC5/ADC.c **** *  ADC_Enable() function.
  72:.\Generated_Source\PSoC5/ADC.c **** *
  73:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
  74:.\Generated_Source\PSoC5/ADC.c **** void ADC_Start(void)
  75:.\Generated_Source\PSoC5/ADC.c **** {
  76:.\Generated_Source\PSoC5/ADC.c **** 
  77:.\Generated_Source\PSoC5/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  78:.\Generated_Source\PSoC5/ADC.c ****     if(ADC_initVar == 0u)
  79:.\Generated_Source\PSoC5/ADC.c ****     {
  80:.\Generated_Source\PSoC5/ADC.c ****         ADC_Init();
  81:.\Generated_Source\PSoC5/ADC.c ****         ADC_initVar = 1u;
  82:.\Generated_Source\PSoC5/ADC.c ****     }
  83:.\Generated_Source\PSoC5/ADC.c ****     ADC_Enable();
  84:.\Generated_Source\PSoC5/ADC.c **** }
  85:.\Generated_Source\PSoC5/ADC.c **** 
  86:.\Generated_Source\PSoC5/ADC.c **** 
  87:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
  88:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Init
  89:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 3


  90:.\Generated_Source\PSoC5/ADC.c **** *
  91:.\Generated_Source\PSoC5/ADC.c **** * Summary:
  92:.\Generated_Source\PSoC5/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  93:.\Generated_Source\PSoC5/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  94:.\Generated_Source\PSoC5/ADC.c **** *  ADC_Start().
  95:.\Generated_Source\PSoC5/ADC.c **** *
  96:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
  97:.\Generated_Source\PSoC5/ADC.c **** *  None.
  98:.\Generated_Source\PSoC5/ADC.c **** *
  99:.\Generated_Source\PSoC5/ADC.c **** * Return:
 100:.\Generated_Source\PSoC5/ADC.c **** *  None.
 101:.\Generated_Source\PSoC5/ADC.c **** *
 102:.\Generated_Source\PSoC5/ADC.c **** * Global variables:
 103:.\Generated_Source\PSoC5/ADC.c **** *  The ADC_offset variable is initialized to 0.
 104:.\Generated_Source\PSoC5/ADC.c **** *
 105:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC5/ADC.c **** void ADC_Init(void)
 107:.\Generated_Source\PSoC5/ADC.c **** {
 108:.\Generated_Source\PSoC5/ADC.c **** 
 109:.\Generated_Source\PSoC5/ADC.c ****     /* This is only valid if there is an internal clock */
 110:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_INTERNAL_CLK)
 111:.\Generated_Source\PSoC5/ADC.c ****         ADC_theACLK_SetMode(CYCLK_DUTY);
 112:.\Generated_Source\PSoC5/ADC.c ****     #endif /* End ADC_DEFAULT_INTERNAL_CLK */
 113:.\Generated_Source\PSoC5/ADC.c **** 
 114:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 115:.\Generated_Source\PSoC5/ADC.c ****         /* Start and set interrupt vector */
 116:.\Generated_Source\PSoC5/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
 117:.\Generated_Source\PSoC5/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
 118:.\Generated_Source\PSoC5/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 119:.\Generated_Source\PSoC5/ADC.c **** 
 120:.\Generated_Source\PSoC5/ADC.c ****     /* Enable IRQ mode*/
 121:.\Generated_Source\PSoC5/ADC.c ****     ADC_SAR_CSR1_REG |= ADC_SAR_IRQ_MASK_EN | ADC_SAR_IRQ_MODE_EDGE;
 122:.\Generated_Source\PSoC5/ADC.c **** 
 123:.\Generated_Source\PSoC5/ADC.c ****     /*Set SAR ADC resolution ADC */
 124:.\Generated_Source\PSoC5/ADC.c ****     ADC_SetResolution(ADC_DEFAULT_RESOLUTION);
 125:.\Generated_Source\PSoC5/ADC.c ****     ADC_offset = 0;
 126:.\Generated_Source\PSoC5/ADC.c **** }
 127:.\Generated_Source\PSoC5/ADC.c **** 
 128:.\Generated_Source\PSoC5/ADC.c **** 
 129:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 130:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Enable
 131:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 132:.\Generated_Source\PSoC5/ADC.c **** *
 133:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 134:.\Generated_Source\PSoC5/ADC.c **** *  Enables the reference, clock and power for SAR ADC.
 135:.\Generated_Source\PSoC5/ADC.c **** *
 136:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 137:.\Generated_Source\PSoC5/ADC.c **** *  None.
 138:.\Generated_Source\PSoC5/ADC.c **** *
 139:.\Generated_Source\PSoC5/ADC.c **** * Return:
 140:.\Generated_Source\PSoC5/ADC.c **** *  None.
 141:.\Generated_Source\PSoC5/ADC.c **** *
 142:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 143:.\Generated_Source\PSoC5/ADC.c **** void ADC_Enable(void)
 144:.\Generated_Source\PSoC5/ADC.c **** {
 145:.\Generated_Source\PSoC5/ADC.c ****     uint8 tmpReg;
 146:.\Generated_Source\PSoC5/ADC.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 4


 147:.\Generated_Source\PSoC5/ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 148:.\Generated_Source\PSoC5/ADC.c **** 
 149:.\Generated_Source\PSoC5/ADC.c ****     /* Enable the SAR ADC block in Active Power Mode */
 150:.\Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_SAR_REG |= ADC_ACT_PWR_SAR_EN;
 151:.\Generated_Source\PSoC5/ADC.c **** 
 152:.\Generated_Source\PSoC5/ADC.c ****      /* Enable the SAR ADC in Standby Power Mode*/
 153:.\Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_SAR_REG |= ADC_STBY_PWR_SAR_EN;
 154:.\Generated_Source\PSoC5/ADC.c **** 
 155:.\Generated_Source\PSoC5/ADC.c ****     /* This is only valid if there is an internal clock */
 156:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_INTERNAL_CLK)
 157:.\Generated_Source\PSoC5/ADC.c ****         ADC_PWRMGR_CLK_REG |= ADC_ACT_PWR_CLK_EN;
 158:.\Generated_Source\PSoC5/ADC.c ****         ADC_STBY_PWRMGR_CLK_REG |= ADC_STBY_PWR_CLK_EN;
 159:.\Generated_Source\PSoC5/ADC.c ****     #endif /* End ADC_DEFAULT_INTERNAL_CLK */
 160:.\Generated_Source\PSoC5/ADC.c **** 
 161:.\Generated_Source\PSoC5/ADC.c ****     /* Enable VCM buffer and Enable Int Ref Amp */
 162:.\Generated_Source\PSoC5/ADC.c ****     tmpReg = ADC_SAR_CSR3_REG;
 163:.\Generated_Source\PSoC5/ADC.c ****     tmpReg |= ADC_SAR_EN_BUF_VCM_EN;
 164:.\Generated_Source\PSoC5/ADC.c ****     /* PD_BUF_VREF is OFF in External reference or Vdda reference mode */
 165:.\Generated_Source\PSoC5/ADC.c ****     #if((ADC_DEFAULT_REFERENCE == ADC__EXT_REF) || \
 166:.\Generated_Source\PSoC5/ADC.c ****         (ADC_DEFAULT_RANGE == ADC__VNEG_VDDA_DIFF))
 167:.\Generated_Source\PSoC5/ADC.c ****         tmpReg &= (uint8)~ADC_SAR_EN_BUF_VREF_EN;
 168:.\Generated_Source\PSoC5/ADC.c ****     #else /* In INTREF or INTREF Bypassed this buffer is ON */
 169:.\Generated_Source\PSoC5/ADC.c ****         tmpReg |= ADC_SAR_EN_BUF_VREF_EN;
 170:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_REFERENCE == ADC__EXT_REF */
 171:.\Generated_Source\PSoC5/ADC.c ****     ADC_SAR_CSR3_REG = tmpReg;
 172:.\Generated_Source\PSoC5/ADC.c **** 
 173:.\Generated_Source\PSoC5/ADC.c ****     /* Set reference for ADC */
 174:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_RANGE == ADC__VNEG_VDDA_DIFF)
 175:.\Generated_Source\PSoC5/ADC.c ****         #if(ADC_DEFAULT_REFERENCE == ADC__EXT_REF)
 176:.\Generated_Source\PSoC5/ADC.c ****             ADC_SAR_CSR6_REG = ADC_INT_BYPASS_EXT_VREF; /* S2 */
 177:.\Generated_Source\PSoC5/ADC.c ****         #else /* Internal Vdda reference or obsolete bypass mode */
 178:.\Generated_Source\PSoC5/ADC.c ****             ADC_SAR_CSR6_REG = ADC_VDDA_VREF;           /* S7 */
 179:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_DEFAULT_REFERENCE == ADC__EXT_REF */
 180:.\Generated_Source\PSoC5/ADC.c ****     #else  /* Reference goes through internal buffer */
 181:.\Generated_Source\PSoC5/ADC.c ****         #if(ADC_DEFAULT_REFERENCE == ADC__INT_REF_NOT_BYPASSED)
 182:.\Generated_Source\PSoC5/ADC.c ****             ADC_SAR_CSR6_REG = ADC_INT_VREF;            /* S3 + S4 */
 183:.\Generated_Source\PSoC5/ADC.c ****         #else /* INTREF Bypassed of External */
 184:.\Generated_Source\PSoC5/ADC.c ****             ADC_SAR_CSR6_REG = ADC_INT_BYPASS_EXT_VREF; /* S2 */
 185:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_DEFAULT_REFERENCE == ADC__INT_REF_NOT_BYPASSED */
 186:.\Generated_Source\PSoC5/ADC.c ****     #endif /* VNEG_VDDA_DIFF */
 187:.\Generated_Source\PSoC5/ADC.c **** 
 188:.\Generated_Source\PSoC5/ADC.c ****     /* Low non-overlap delay for sampling clock signals (for 1MSPS) */
 189:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_HIGH_POWER_PULSE == 0u) /* MinPulseWidth <= 50 ns */
 190:.\Generated_Source\PSoC5/ADC.c ****         ADC_SAR_CSR5_REG &= (uint8)~ADC_SAR_DLY_INC;
 191:.\Generated_Source\PSoC5/ADC.c ****     #else /* Set High non-overlap delay for sampling clock signals (for <500KSPS)*/
 192:.\Generated_Source\PSoC5/ADC.c ****         ADC_SAR_CSR5_REG |= ADC_SAR_DLY_INC;
 193:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_HIGH_POWER_PULSE == 0u */
 194:.\Generated_Source\PSoC5/ADC.c **** 
 195:.\Generated_Source\PSoC5/ADC.c ****     /* Increase comparator latch enable delay by 20%, 
 196:.\Generated_Source\PSoC5/ADC.c ****     *  Increase comparator bias current by 30% without impacting delaysDelay 
 197:.\Generated_Source\PSoC5/ADC.c ****     *  Default for 1MSPS) 
 198:.\Generated_Source\PSoC5/ADC.c ****     */
 199:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_HIGH_POWER_PULSE == 0u)    /* MinPulseWidth <= 50 ns */
 200:.\Generated_Source\PSoC5/ADC.c ****         ADC_SAR_CSR5_REG |= ADC_SAR_SEL_CSEL_DFT_CHAR;
 201:.\Generated_Source\PSoC5/ADC.c ****     #else /* for <500ksps */
 202:.\Generated_Source\PSoC5/ADC.c ****         ADC_SAR_CSR5_REG &= (uint8)~ADC_SAR_SEL_CSEL_DFT_CHAR;
 203:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_HIGH_POWER_PULSE == 0u */
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 5


 204:.\Generated_Source\PSoC5/ADC.c **** 
 205:.\Generated_Source\PSoC5/ADC.c ****     /* Set default power and other configurations for control register 0 in multiple lines */
 206:.\Generated_Source\PSoC5/ADC.c ****     ADC_SAR_CSR0_REG = (uint8)((uint8)ADC_DEFAULT_POWER << ADC_SAR_POWER_SHIFT)
 207:.\Generated_Source\PSoC5/ADC.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
 208:.\Generated_Source\PSoC5/ADC.c ****     #if ((CY_PSOC5LP) || (ADC_DEFAULT_REFERENCE != ADC__EXT_REF))
 209:.\Generated_Source\PSoC5/ADC.c ****         | ADC_SAR_HIZ_CLEAR
 210:.\Generated_Source\PSoC5/ADC.c ****     #endif /* SAR_HIZ_CLEAR */
 211:.\Generated_Source\PSoC5/ADC.c ****     /*Set Convertion mode */
 212:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_CONV_MODE != ADC__FREE_RUNNING)      /* If triggered mode */
 213:.\Generated_Source\PSoC5/ADC.c ****         | ADC_SAR_MX_SOF_UDB           /* source: UDB */
 214:.\Generated_Source\PSoC5/ADC.c ****         | ADC_SAR_SOF_MODE_EDGE        /* Set edge-sensitive sof source */
 215:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_CONV_MODE */
 216:.\Generated_Source\PSoC5/ADC.c ****     ; /* end of multiple line initialization */
 217:.\Generated_Source\PSoC5/ADC.c **** 
 218:.\Generated_Source\PSoC5/ADC.c ****     ADC_SAR_TR0_REG = ADC_SAR_CAP_TRIM_2;
 219:.\Generated_Source\PSoC5/ADC.c **** 
 220:.\Generated_Source\PSoC5/ADC.c ****     /* Enable clock for SAR ADC*/
 221:.\Generated_Source\PSoC5/ADC.c ****     ADC_SAR_CLK_REG |= ADC_SAR_MX_CLK_EN;
 222:.\Generated_Source\PSoC5/ADC.c **** 
 223:.\Generated_Source\PSoC5/ADC.c ****     CyDelayUs(10u); /* The block is ready to use 10 us after the enable signal is set high. */
 224:.\Generated_Source\PSoC5/ADC.c **** 
 225:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 226:.\Generated_Source\PSoC5/ADC.c ****         /* Clear a pending interrupt */
 227:.\Generated_Source\PSoC5/ADC.c ****         CyIntClearPending(ADC_INTC_NUMBER);
 228:.\Generated_Source\PSoC5/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 229:.\Generated_Source\PSoC5/ADC.c **** 
 230:.\Generated_Source\PSoC5/ADC.c ****     CyExitCriticalSection(enableInterrupts);
 231:.\Generated_Source\PSoC5/ADC.c **** }
 232:.\Generated_Source\PSoC5/ADC.c **** 
 233:.\Generated_Source\PSoC5/ADC.c **** 
 234:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 235:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Stop
 236:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 237:.\Generated_Source\PSoC5/ADC.c **** *
 238:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 239:.\Generated_Source\PSoC5/ADC.c **** *  Stops ADC conversions and puts the ADC into its lowest power mode.
 240:.\Generated_Source\PSoC5/ADC.c **** *
 241:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 242:.\Generated_Source\PSoC5/ADC.c **** *  None.
 243:.\Generated_Source\PSoC5/ADC.c **** *
 244:.\Generated_Source\PSoC5/ADC.c **** * Return:
 245:.\Generated_Source\PSoC5/ADC.c **** *  None.
 246:.\Generated_Source\PSoC5/ADC.c **** *
 247:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 248:.\Generated_Source\PSoC5/ADC.c **** void ADC_Stop(void)
 249:.\Generated_Source\PSoC5/ADC.c **** {
 250:.\Generated_Source\PSoC5/ADC.c ****     uint8 enableInterrupts;
 251:.\Generated_Source\PSoC5/ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 252:.\Generated_Source\PSoC5/ADC.c **** 
 253:.\Generated_Source\PSoC5/ADC.c ****     /* Stop all conversions */
 254:.\Generated_Source\PSoC5/ADC.c ****     ADC_SAR_CSR0_REG &= (uint8)~ADC_SAR_SOF_START_CONV;
 255:.\Generated_Source\PSoC5/ADC.c ****     /* Disable the SAR ADC block in Active Power Mode */
 256:.\Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_SAR_REG &= (uint8)~ADC_ACT_PWR_SAR_EN;
 257:.\Generated_Source\PSoC5/ADC.c ****     /* Disable the SAR ADC in Standby Power Mode */
 258:.\Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_SAR_REG &= (uint8)~ADC_STBY_PWR_SAR_EN;
 259:.\Generated_Source\PSoC5/ADC.c **** 
 260:.\Generated_Source\PSoC5/ADC.c ****     /* This is only valid if there is an internal clock */
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 6


 261:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_INTERNAL_CLK)
 262:.\Generated_Source\PSoC5/ADC.c ****         ADC_PWRMGR_CLK_REG &= (uint8)~ADC_ACT_PWR_CLK_EN;
 263:.\Generated_Source\PSoC5/ADC.c ****         ADC_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_STBY_PWR_CLK_EN;
 264:.\Generated_Source\PSoC5/ADC.c ****     #endif /* End ADC_DEFAULT_INTERNAL_CLK */
 265:.\Generated_Source\PSoC5/ADC.c **** 
 266:.\Generated_Source\PSoC5/ADC.c ****     CyExitCriticalSection(enableInterrupts);
 267:.\Generated_Source\PSoC5/ADC.c **** 
 268:.\Generated_Source\PSoC5/ADC.c **** }
 269:.\Generated_Source\PSoC5/ADC.c **** 
 270:.\Generated_Source\PSoC5/ADC.c **** 
 271:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 272:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetPower
 273:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 274:.\Generated_Source\PSoC5/ADC.c **** *
 275:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 276:.\Generated_Source\PSoC5/ADC.c **** *  Sets the operational power of the ADC. You should use the higher power
 277:.\Generated_Source\PSoC5/ADC.c **** *  settings with faster clock speeds.
 278:.\Generated_Source\PSoC5/ADC.c **** *
 279:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 280:.\Generated_Source\PSoC5/ADC.c **** *  power:  Power setting for ADC
 281:.\Generated_Source\PSoC5/ADC.c **** *  0 ->    Normal
 282:.\Generated_Source\PSoC5/ADC.c **** *  1 ->    Medium power
 283:.\Generated_Source\PSoC5/ADC.c **** *  2 ->    1.25 power
 284:.\Generated_Source\PSoC5/ADC.c **** *  3 ->    Minimum power.
 285:.\Generated_Source\PSoC5/ADC.c **** *
 286:.\Generated_Source\PSoC5/ADC.c **** * Return:
 287:.\Generated_Source\PSoC5/ADC.c **** *  None.
 288:.\Generated_Source\PSoC5/ADC.c **** *
 289:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 290:.\Generated_Source\PSoC5/ADC.c **** void ADC_SetPower(uint8 power)
 291:.\Generated_Source\PSoC5/ADC.c **** {
 292:.\Generated_Source\PSoC5/ADC.c ****     uint8 tmpReg;
 293:.\Generated_Source\PSoC5/ADC.c **** 
 294:.\Generated_Source\PSoC5/ADC.c ****     /* mask off invalid power settings */
 295:.\Generated_Source\PSoC5/ADC.c ****     power &= ADC_SAR_API_POWER_MASK;
 296:.\Generated_Source\PSoC5/ADC.c **** 
 297:.\Generated_Source\PSoC5/ADC.c ****     /* Set Power parameter  */
 298:.\Generated_Source\PSoC5/ADC.c ****     tmpReg = ADC_SAR_CSR0_REG & (uint8)~ADC_SAR_POWER_MASK;
 299:.\Generated_Source\PSoC5/ADC.c ****     tmpReg |= (uint8)(power << ADC_SAR_POWER_SHIFT);
 300:.\Generated_Source\PSoC5/ADC.c ****     ADC_SAR_CSR0_REG = tmpReg;
 301:.\Generated_Source\PSoC5/ADC.c **** }
 302:.\Generated_Source\PSoC5/ADC.c **** 
 303:.\Generated_Source\PSoC5/ADC.c **** 
 304:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 305:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetResolution
 306:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 307:.\Generated_Source\PSoC5/ADC.c **** *
 308:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 309:.\Generated_Source\PSoC5/ADC.c **** *  Sets the Relution of the SAR.
 310:.\Generated_Source\PSoC5/ADC.c **** *
 311:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 312:.\Generated_Source\PSoC5/ADC.c **** *  resolution:
 313:.\Generated_Source\PSoC5/ADC.c **** *  12 ->    RES12
 314:.\Generated_Source\PSoC5/ADC.c **** *  10 ->    RES10
 315:.\Generated_Source\PSoC5/ADC.c **** *  8  ->    RES8
 316:.\Generated_Source\PSoC5/ADC.c **** *
 317:.\Generated_Source\PSoC5/ADC.c **** * Return:
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 7


 318:.\Generated_Source\PSoC5/ADC.c **** *  None.
 319:.\Generated_Source\PSoC5/ADC.c **** *
 320:.\Generated_Source\PSoC5/ADC.c **** * Side Effects:
 321:.\Generated_Source\PSoC5/ADC.c **** *  The ADC resolution cannot be changed during a conversion cycle. The
 322:.\Generated_Source\PSoC5/ADC.c **** *  recommended best practice is to stop conversions with
 323:.\Generated_Source\PSoC5/ADC.c **** *  ADC_StopConvert(), change the resolution, then restart the
 324:.\Generated_Source\PSoC5/ADC.c **** *  conversions with ADC_StartConvert().
 325:.\Generated_Source\PSoC5/ADC.c **** *  If you decide not to stop conversions before calling this API, you
 326:.\Generated_Source\PSoC5/ADC.c **** *  should use ADC_IsEndConversion() to wait until conversion is complete
 327:.\Generated_Source\PSoC5/ADC.c **** *  before changing the resolution.
 328:.\Generated_Source\PSoC5/ADC.c **** *  If you call ADC_SetResolution() during a conversion, the resolution will
 329:.\Generated_Source\PSoC5/ADC.c **** *  not be changed until the current conversion is complete. Data will not be
 330:.\Generated_Source\PSoC5/ADC.c **** *  available in the new resolution for another 6 + "New Resolution(in bits)"
 331:.\Generated_Source\PSoC5/ADC.c **** *  clock cycles.
 332:.\Generated_Source\PSoC5/ADC.c **** *  You may need add a delay of this number of clock cycles after
 333:.\Generated_Source\PSoC5/ADC.c **** *  ADC_SetResolution() is called before data is valid again.
 334:.\Generated_Source\PSoC5/ADC.c **** *  Affects ADC_CountsTo_Volts(), ADC_CountsTo_mVolts(), and
 335:.\Generated_Source\PSoC5/ADC.c **** *  ADC_CountsTo_uVolts() by calculating the correct conversion between ADC
 336:.\Generated_Source\PSoC5/ADC.c **** *  counts and the applied input voltage. Calculation depends on resolution,
 337:.\Generated_Source\PSoC5/ADC.c **** *  input range, and voltage reference.
 338:.\Generated_Source\PSoC5/ADC.c **** *
 339:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 340:.\Generated_Source\PSoC5/ADC.c **** void ADC_SetResolution(uint8 resolution)
 341:.\Generated_Source\PSoC5/ADC.c **** {
 342:.\Generated_Source\PSoC5/ADC.c ****     uint8 tmpReg;
 343:.\Generated_Source\PSoC5/ADC.c **** 
 344:.\Generated_Source\PSoC5/ADC.c ****     /* Set SAR ADC resolution and sample width: 18 conversion cycles at 12bits + 1 gap */
 345:.\Generated_Source\PSoC5/ADC.c ****     switch (resolution)
 346:.\Generated_Source\PSoC5/ADC.c ****     {
 347:.\Generated_Source\PSoC5/ADC.c ****         case (uint8)ADC__BITS_12:
 348:.\Generated_Source\PSoC5/ADC.c ****             tmpReg = ADC_SAR_RESOLUTION_12BIT | ADC_SAR_SAMPLE_WIDTH;
 349:.\Generated_Source\PSoC5/ADC.c ****             break;
 350:.\Generated_Source\PSoC5/ADC.c ****         case (uint8)ADC__BITS_10:
 351:.\Generated_Source\PSoC5/ADC.c ****             tmpReg = ADC_SAR_RESOLUTION_10BIT | ADC_SAR_SAMPLE_WIDTH;
 352:.\Generated_Source\PSoC5/ADC.c ****             break;
 353:.\Generated_Source\PSoC5/ADC.c ****         case (uint8)ADC__BITS_8:
 354:.\Generated_Source\PSoC5/ADC.c ****             tmpReg = ADC_SAR_RESOLUTION_8BIT | ADC_SAR_SAMPLE_WIDTH;
 355:.\Generated_Source\PSoC5/ADC.c ****             break;
 356:.\Generated_Source\PSoC5/ADC.c ****         default:
 357:.\Generated_Source\PSoC5/ADC.c ****             tmpReg = ADC_SAR_RESOLUTION_12BIT | ADC_SAR_SAMPLE_WIDTH;
 358:.\Generated_Source\PSoC5/ADC.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 359:.\Generated_Source\PSoC5/ADC.c ****             CYASSERT(0u != 0u);
 360:.\Generated_Source\PSoC5/ADC.c ****             break;
 361:.\Generated_Source\PSoC5/ADC.c ****     }
 362:.\Generated_Source\PSoC5/ADC.c ****     ADC_SAR_CSR2_REG = tmpReg;
 363:.\Generated_Source\PSoC5/ADC.c **** 
 364:.\Generated_Source\PSoC5/ADC.c ****      /* Calculate gain for convert counts to volts */
 365:.\Generated_Source\PSoC5/ADC.c ****     ADC_CalcGain(resolution);
 366:.\Generated_Source\PSoC5/ADC.c **** }
 367:.\Generated_Source\PSoC5/ADC.c **** 
 368:.\Generated_Source\PSoC5/ADC.c **** 
 369:.\Generated_Source\PSoC5/ADC.c **** #if(ADC_DEFAULT_CONV_MODE != ADC__HARDWARE_TRIGGER)
 370:.\Generated_Source\PSoC5/ADC.c **** 
 371:.\Generated_Source\PSoC5/ADC.c **** 
 372:.\Generated_Source\PSoC5/ADC.c ****     /*******************************************************************************
 373:.\Generated_Source\PSoC5/ADC.c ****     * Function Name: ADC_StartConvert
 374:.\Generated_Source\PSoC5/ADC.c ****     ********************************************************************************
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 8


 375:.\Generated_Source\PSoC5/ADC.c ****     *
 376:.\Generated_Source\PSoC5/ADC.c ****     * Summary:
 377:.\Generated_Source\PSoC5/ADC.c ****     *  Forces the ADC to initiate a conversion. In free-running mode, the ADC runs
 378:.\Generated_Source\PSoC5/ADC.c ****     *  continuously. In software trigger mode, the function also acts as a software
 379:.\Generated_Source\PSoC5/ADC.c ****     *  version of the SOC and every conversion must be triggered by
 380:.\Generated_Source\PSoC5/ADC.c ****     *  ADC_StartConvert(). This function is not available when the
 381:.\Generated_Source\PSoC5/ADC.c ****     *  Hardware Trigger sample mode is selected.
 382:.\Generated_Source\PSoC5/ADC.c ****     *
 383:.\Generated_Source\PSoC5/ADC.c ****     * Parameters:
 384:.\Generated_Source\PSoC5/ADC.c ****     *  None.
 385:.\Generated_Source\PSoC5/ADC.c ****     *
 386:.\Generated_Source\PSoC5/ADC.c ****     * Return:
 387:.\Generated_Source\PSoC5/ADC.c ****     *  None.
 388:.\Generated_Source\PSoC5/ADC.c ****     *
 389:.\Generated_Source\PSoC5/ADC.c ****     * Theory:
 390:.\Generated_Source\PSoC5/ADC.c ****     *  Forces the ADC to initiate a conversion. In Free Running mode, the ADC will
 391:.\Generated_Source\PSoC5/ADC.c ****     *  run continuously. In a software trigger mode the function also acts as a
 392:.\Generated_Source\PSoC5/ADC.c ****     *  software version of the SOC. Here every conversion has to be triggered by
 393:.\Generated_Source\PSoC5/ADC.c ****     *  the routine. This writes into the SOC bit in SAR_CTRL reg.
 394:.\Generated_Source\PSoC5/ADC.c ****     *
 395:.\Generated_Source\PSoC5/ADC.c ****     * Side Effects:
 396:.\Generated_Source\PSoC5/ADC.c ****     *  In a software trigger mode the function switches source for SOF from the
 397:.\Generated_Source\PSoC5/ADC.c ****     *  external pin to the internal SOF generation. Application should not call
 398:.\Generated_Source\PSoC5/ADC.c ****     *  StartConvert if external source used for SOF.
 399:.\Generated_Source\PSoC5/ADC.c ****     *
 400:.\Generated_Source\PSoC5/ADC.c ****     *******************************************************************************/
 401:.\Generated_Source\PSoC5/ADC.c ****     void ADC_StartConvert(void)
 402:.\Generated_Source\PSoC5/ADC.c ****     {
 403:.\Generated_Source\PSoC5/ADC.c ****         #if(ADC_DEFAULT_CONV_MODE != ADC__FREE_RUNNING)  /* If software triggered mode */
 404:.\Generated_Source\PSoC5/ADC.c ****             ADC_SAR_CSR0_REG &= (uint8)~ADC_SAR_MX_SOF_UDB;   /* source: SOF bit */
 405:.\Generated_Source\PSoC5/ADC.c ****         #endif /* End ADC_DEFAULT_CONV_MODE */
 406:.\Generated_Source\PSoC5/ADC.c **** 
 407:.\Generated_Source\PSoC5/ADC.c ****         /* Start the conversion */
 408:.\Generated_Source\PSoC5/ADC.c ****         ADC_SAR_CSR0_REG |= ADC_SAR_SOF_START_CONV;
 409:.\Generated_Source\PSoC5/ADC.c ****     }
 410:.\Generated_Source\PSoC5/ADC.c **** 
 411:.\Generated_Source\PSoC5/ADC.c **** 
 412:.\Generated_Source\PSoC5/ADC.c ****     /*******************************************************************************
 413:.\Generated_Source\PSoC5/ADC.c ****     * Function Name: ADC_StopConvert
 414:.\Generated_Source\PSoC5/ADC.c ****     ********************************************************************************
 415:.\Generated_Source\PSoC5/ADC.c ****     *
 416:.\Generated_Source\PSoC5/ADC.c ****     * Summary:
 417:.\Generated_Source\PSoC5/ADC.c ****     *  Forces the ADC to stop conversions. If a conversion is currently executing,
 418:.\Generated_Source\PSoC5/ADC.c ****     *  that conversion will complete, but no further conversions will occur. This
 419:.\Generated_Source\PSoC5/ADC.c ****     *  function is not available when the Hardware Trigger sample mode is selected.
 420:.\Generated_Source\PSoC5/ADC.c ****     *
 421:.\Generated_Source\PSoC5/ADC.c ****     * Parameters:
 422:.\Generated_Source\PSoC5/ADC.c ****     *  None.
 423:.\Generated_Source\PSoC5/ADC.c ****     *
 424:.\Generated_Source\PSoC5/ADC.c ****     * Return:
 425:.\Generated_Source\PSoC5/ADC.c ****     *  None.
 426:.\Generated_Source\PSoC5/ADC.c ****     *
 427:.\Generated_Source\PSoC5/ADC.c ****     * Theory:
 428:.\Generated_Source\PSoC5/ADC.c ****     *  Stops ADC conversion in Free Running mode.
 429:.\Generated_Source\PSoC5/ADC.c ****     *
 430:.\Generated_Source\PSoC5/ADC.c ****     * Side Effects:
 431:.\Generated_Source\PSoC5/ADC.c ****     *  In Software Trigger sample mode, this function sets a software version of the
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 9


 432:.\Generated_Source\PSoC5/ADC.c ****     *  SOC to low level and switches the SOC source to hardware SOC input.
 433:.\Generated_Source\PSoC5/ADC.c ****     *
 434:.\Generated_Source\PSoC5/ADC.c ****     *******************************************************************************/
 435:.\Generated_Source\PSoC5/ADC.c ****     void ADC_StopConvert(void)
 436:.\Generated_Source\PSoC5/ADC.c ****     {
 437:.\Generated_Source\PSoC5/ADC.c ****         /* Stop all conversions */
 438:.\Generated_Source\PSoC5/ADC.c ****         ADC_SAR_CSR0_REG &= (uint8)~ADC_SAR_SOF_START_CONV;
 439:.\Generated_Source\PSoC5/ADC.c **** 
 440:.\Generated_Source\PSoC5/ADC.c ****         #if(ADC_DEFAULT_CONV_MODE != ADC__FREE_RUNNING)  /* If software triggered mode */
 441:.\Generated_Source\PSoC5/ADC.c ****             /* Return source to UDB for hardware SOF signal */
 442:.\Generated_Source\PSoC5/ADC.c ****             ADC_SAR_CSR0_REG |= ADC_SAR_MX_SOF_UDB;    /* source: UDB */
 443:.\Generated_Source\PSoC5/ADC.c ****         #endif /* End ADC_DEFAULT_CONV_MODE */
 444:.\Generated_Source\PSoC5/ADC.c **** 
 445:.\Generated_Source\PSoC5/ADC.c ****     }
 446:.\Generated_Source\PSoC5/ADC.c **** 
 447:.\Generated_Source\PSoC5/ADC.c **** #endif /* End ADC_DEFAULT_CONV_MODE != ADC__HARDWARE_TRIGGER */
 448:.\Generated_Source\PSoC5/ADC.c **** 
 449:.\Generated_Source\PSoC5/ADC.c **** 
 450:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_IsEndConversion
 452:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 453:.\Generated_Source\PSoC5/ADC.c **** *
 454:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 455:.\Generated_Source\PSoC5/ADC.c **** *  Immediately returns the status of the conversion or does not return
 456:.\Generated_Source\PSoC5/ADC.c **** *  (blocking) until the conversion completes, depending on the retMode
 457:.\Generated_Source\PSoC5/ADC.c **** *  parameter.
 458:.\Generated_Source\PSoC5/ADC.c **** *
 459:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 460:.\Generated_Source\PSoC5/ADC.c **** *  retMode:  Check conversion return mode.
 461:.\Generated_Source\PSoC5/ADC.c **** *   ADC_RETURN_STATUS: Immediately returns the status. If the
 462:.\Generated_Source\PSoC5/ADC.c **** *     value returned is zero, the conversion is not complete, and this function
 463:.\Generated_Source\PSoC5/ADC.c **** *     should be retried until a nonzero result is returned.
 464:.\Generated_Source\PSoC5/ADC.c **** *   ADC_WAIT_FOR_RESULT: Does not return a result until the ADC
 465:.\Generated_Source\PSoC5/ADC.c **** *     conversion is complete.
 466:.\Generated_Source\PSoC5/ADC.c **** *
 467:.\Generated_Source\PSoC5/ADC.c **** * Return:
 468:.\Generated_Source\PSoC5/ADC.c **** *  (uint8)  0 =>  The ADC is still calculating the last result.
 469:.\Generated_Source\PSoC5/ADC.c **** *           1 =>  The last conversion is complete.
 470:.\Generated_Source\PSoC5/ADC.c **** *
 471:.\Generated_Source\PSoC5/ADC.c **** * Side Effects:
 472:.\Generated_Source\PSoC5/ADC.c **** *  This function reads the end of conversion status, which is cleared on read.
 473:.\Generated_Source\PSoC5/ADC.c **** *
 474:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 475:.\Generated_Source\PSoC5/ADC.c **** uint8 ADC_IsEndConversion(uint8 retMode)
 476:.\Generated_Source\PSoC5/ADC.c **** {
 477:.\Generated_Source\PSoC5/ADC.c ****     uint8 status;
 478:.\Generated_Source\PSoC5/ADC.c **** 
 479:.\Generated_Source\PSoC5/ADC.c ****     do
 480:.\Generated_Source\PSoC5/ADC.c ****     {
 481:.\Generated_Source\PSoC5/ADC.c ****         status = ADC_SAR_CSR1_REG & ADC_SAR_EOF_1;
 482:.\Generated_Source\PSoC5/ADC.c ****     } while ((status != ADC_SAR_EOF_1) && (retMode == ADC_WAIT_FOR_RESULT));
 483:.\Generated_Source\PSoC5/ADC.c ****     /* If convertion complete, wait until EOF bit released */
 484:.\Generated_Source\PSoC5/ADC.c ****     if(status == ADC_SAR_EOF_1)
 485:.\Generated_Source\PSoC5/ADC.c ****     {
 486:.\Generated_Source\PSoC5/ADC.c ****         /* wait one ADC clock to let the EOC status bit release */
 487:.\Generated_Source\PSoC5/ADC.c ****         CyDelayUs(1u);
 488:.\Generated_Source\PSoC5/ADC.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 10


 489:.\Generated_Source\PSoC5/ADC.c ****         CY_GET_REG8(ADC_SAR_CSR1_PTR);
 490:.\Generated_Source\PSoC5/ADC.c ****     }
 491:.\Generated_Source\PSoC5/ADC.c **** 
 492:.\Generated_Source\PSoC5/ADC.c ****     return(status);
 493:.\Generated_Source\PSoC5/ADC.c **** }
 494:.\Generated_Source\PSoC5/ADC.c **** 
 495:.\Generated_Source\PSoC5/ADC.c **** 
 496:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 497:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_GetResult8
 498:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 499:.\Generated_Source\PSoC5/ADC.c **** *
 500:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 501:.\Generated_Source\PSoC5/ADC.c **** *  Returns the result of an 8-bit conversion. If the resolution is set greater
 502:.\Generated_Source\PSoC5/ADC.c **** *  than 8 bits, the function returns the LSB of the result.
 503:.\Generated_Source\PSoC5/ADC.c **** *  ADC_IsEndConversion() should be called to verify that the data
 504:.\Generated_Source\PSoC5/ADC.c **** *   sample is ready.
 505:.\Generated_Source\PSoC5/ADC.c **** *
 506:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 507:.\Generated_Source\PSoC5/ADC.c **** *  None.
 508:.\Generated_Source\PSoC5/ADC.c **** *
 509:.\Generated_Source\PSoC5/ADC.c **** * Return:
 510:.\Generated_Source\PSoC5/ADC.c **** *  The LSB of the last ADC conversion.
 511:.\Generated_Source\PSoC5/ADC.c **** *
 512:.\Generated_Source\PSoC5/ADC.c **** * Global Variables:
 513:.\Generated_Source\PSoC5/ADC.c **** *  ADC_shift - used to convert the ADC counts to the 2s
 514:.\Generated_Source\PSoC5/ADC.c **** *  compliment form.
 515:.\Generated_Source\PSoC5/ADC.c **** *
 516:.\Generated_Source\PSoC5/ADC.c **** * Side Effects:
 517:.\Generated_Source\PSoC5/ADC.c **** *  Converts the ADC counts to the 2s complement form.
 518:.\Generated_Source\PSoC5/ADC.c **** *
 519:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 520:.\Generated_Source\PSoC5/ADC.c **** int8 ADC_GetResult8( void )
 521:.\Generated_Source\PSoC5/ADC.c **** {
 522:.\Generated_Source\PSoC5/ADC.c ****     return( (int8)ADC_SAR_WRK0_REG - (int8)ADC_shift);
 523:.\Generated_Source\PSoC5/ADC.c **** }
 524:.\Generated_Source\PSoC5/ADC.c **** 
 525:.\Generated_Source\PSoC5/ADC.c **** 
 526:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 527:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_GetResult16
 528:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 529:.\Generated_Source\PSoC5/ADC.c **** *
 530:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 531:.\Generated_Source\PSoC5/ADC.c **** *  Returns a 16-bit result for a conversion with a result that has a resolution
 532:.\Generated_Source\PSoC5/ADC.c **** *  of 8 to 12 bits.
 533:.\Generated_Source\PSoC5/ADC.c **** *  ADC_IsEndConversion() should be called to verify that the data
 534:.\Generated_Source\PSoC5/ADC.c **** *   sample is ready
 535:.\Generated_Source\PSoC5/ADC.c **** *
 536:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 537:.\Generated_Source\PSoC5/ADC.c **** *  None.
 538:.\Generated_Source\PSoC5/ADC.c **** *
 539:.\Generated_Source\PSoC5/ADC.c **** * Return:
 540:.\Generated_Source\PSoC5/ADC.c **** *  The 16-bit result of the last ADC conversion
 541:.\Generated_Source\PSoC5/ADC.c **** *
 542:.\Generated_Source\PSoC5/ADC.c **** * Global Variables:
 543:.\Generated_Source\PSoC5/ADC.c **** *  ADC_shift - used to convert the ADC counts to the 2s
 544:.\Generated_Source\PSoC5/ADC.c **** *  compliment form.
 545:.\Generated_Source\PSoC5/ADC.c **** *
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 11


 546:.\Generated_Source\PSoC5/ADC.c **** * Side Effects:
 547:.\Generated_Source\PSoC5/ADC.c **** *  Converts the ADC counts to the 2s complement form.
 548:.\Generated_Source\PSoC5/ADC.c **** *
 549:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 550:.\Generated_Source\PSoC5/ADC.c **** int16 ADC_GetResult16( void )
 551:.\Generated_Source\PSoC5/ADC.c **** {
 552:.\Generated_Source\PSoC5/ADC.c ****     uint16 res;
 553:.\Generated_Source\PSoC5/ADC.c **** 
 554:.\Generated_Source\PSoC5/ADC.c ****     res = CY_GET_REG16(ADC_SAR_WRK_PTR);
 555:.\Generated_Source\PSoC5/ADC.c **** 
 556:.\Generated_Source\PSoC5/ADC.c ****     return( (int16)res - ADC_shift );
 557:.\Generated_Source\PSoC5/ADC.c **** }
 558:.\Generated_Source\PSoC5/ADC.c **** 
 559:.\Generated_Source\PSoC5/ADC.c **** 
 560:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 561:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetOffset
 562:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 563:.\Generated_Source\PSoC5/ADC.c **** *
 564:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 565:.\Generated_Source\PSoC5/ADC.c **** *  Sets the ADC offset, which is used by ADC_CountsTo_Volts(),
 566:.\Generated_Source\PSoC5/ADC.c **** *  ADC_CountsTo_mVolts(), and ADC_CountsTo_uVolts()
 567:.\Generated_Source\PSoC5/ADC.c **** *  to subtract the offset from the given reading before calculating the voltage
 568:.\Generated_Source\PSoC5/ADC.c **** *  conversion.
 569:.\Generated_Source\PSoC5/ADC.c **** *
 570:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 571:.\Generated_Source\PSoC5/ADC.c **** *  int16: This value is measured when the inputs are shorted or connected to
 572:.\Generated_Source\PSoC5/ADC.c ****    the same input voltage.
 573:.\Generated_Source\PSoC5/ADC.c **** *
 574:.\Generated_Source\PSoC5/ADC.c **** * Return:
 575:.\Generated_Source\PSoC5/ADC.c **** *  None.
 576:.\Generated_Source\PSoC5/ADC.c **** *
 577:.\Generated_Source\PSoC5/ADC.c **** * Global Variables:
 578:.\Generated_Source\PSoC5/ADC.c **** *  The ADC_offset variable modified. This variable is used for
 579:.\Generated_Source\PSoC5/ADC.c **** *  offset calibration purpose.
 580:.\Generated_Source\PSoC5/ADC.c **** *  Affects the ADC_CountsTo_Volts,
 581:.\Generated_Source\PSoC5/ADC.c **** *  ADC_CountsTo_mVolts, ADC_CountsTo_uVolts functions
 582:.\Generated_Source\PSoC5/ADC.c **** *  by subtracting the given offset.
 583:.\Generated_Source\PSoC5/ADC.c **** *
 584:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 585:.\Generated_Source\PSoC5/ADC.c **** void ADC_SetOffset(int16 offset)
 586:.\Generated_Source\PSoC5/ADC.c **** {
 587:.\Generated_Source\PSoC5/ADC.c ****     ADC_offset = offset;
 588:.\Generated_Source\PSoC5/ADC.c **** }
 589:.\Generated_Source\PSoC5/ADC.c **** 
 590:.\Generated_Source\PSoC5/ADC.c **** 
 591:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 592:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_CalcGain
 593:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 594:.\Generated_Source\PSoC5/ADC.c **** *
 595:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 596:.\Generated_Source\PSoC5/ADC.c **** *  This function calculates the ADC gain in counts per 10 volt.
 597:.\Generated_Source\PSoC5/ADC.c **** *
 598:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 599:.\Generated_Source\PSoC5/ADC.c **** *  uint8: resolution
 600:.\Generated_Source\PSoC5/ADC.c **** *
 601:.\Generated_Source\PSoC5/ADC.c **** * Return:
 602:.\Generated_Source\PSoC5/ADC.c **** *  None.
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 12


 603:.\Generated_Source\PSoC5/ADC.c **** *
 604:.\Generated_Source\PSoC5/ADC.c **** * Global Variables:
 605:.\Generated_Source\PSoC5/ADC.c **** *  ADC_shift variable initialized. This variable is used to
 606:.\Generated_Source\PSoC5/ADC.c **** *  convert the ADC counts to the 2s compliment form.
 607:.\Generated_Source\PSoC5/ADC.c **** *  ADC_countsPer10Volt variable initialized. This variable is used
 608:.\Generated_Source\PSoC5/ADC.c **** *  for gain calibration purpose.
 609:.\Generated_Source\PSoC5/ADC.c **** *
 610:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 611:.\Generated_Source\PSoC5/ADC.c **** static void ADC_CalcGain( uint8 resolution )
 612:.\Generated_Source\PSoC5/ADC.c **** {
  26              		.loc 1 612 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 08B5     		push	{r3, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
 613:.\Generated_Source\PSoC5/ADC.c ****     int32 counts;
 614:.\Generated_Source\PSoC5/ADC.c ****     #if(!((ADC_DEFAULT_RANGE == ADC__VSS_TO_VREF) || \
 615:.\Generated_Source\PSoC5/ADC.c ****          (ADC_DEFAULT_RANGE == ADC__VSSA_TO_VDDA) || \
 616:.\Generated_Source\PSoC5/ADC.c ****          (ADC_DEFAULT_RANGE == ADC__VSSA_TO_VDAC)) )
 617:.\Generated_Source\PSoC5/ADC.c ****         uint16 diff_zero;
 618:.\Generated_Source\PSoC5/ADC.c ****     #endif /* End ADC_DEFAULT_RANGE */
 619:.\Generated_Source\PSoC5/ADC.c **** 
 620:.\Generated_Source\PSoC5/ADC.c ****     switch (resolution)
  35              		.loc 1 620 0
  36 0002 0A28     		cmp	r0, #10
  37 0004 0FD0     		beq	.L7
  38 0006 0C28     		cmp	r0, #12
  39 0008 02D0     		beq	.L4
  40 000a 0828     		cmp	r0, #8
  41 000c 06D1     		bne	.L8
  42 000e 02E0     		b	.L5
  43              	.L4:
 621:.\Generated_Source\PSoC5/ADC.c ****     {
 622:.\Generated_Source\PSoC5/ADC.c ****         case (uint8)ADC__BITS_12:
 623:.\Generated_Source\PSoC5/ADC.c ****             counts = (int32)ADC_SAR_WRK_MAX_12BIT;
  44              		.loc 1 623 0
  45 0010 4FF48053 		mov	r3, #4096
  46 0014 09E0     		b	.L3
  47              	.L5:
  48              	.LVL1:
 624:.\Generated_Source\PSoC5/ADC.c ****             #if(!((ADC_DEFAULT_RANGE == ADC__VSS_TO_VREF) || \
 625:.\Generated_Source\PSoC5/ADC.c ****                  (ADC_DEFAULT_RANGE == ADC__VSSA_TO_VDDA) || \
 626:.\Generated_Source\PSoC5/ADC.c ****                  (ADC_DEFAULT_RANGE == ADC__VSSA_TO_VDAC)) )
 627:.\Generated_Source\PSoC5/ADC.c ****                 diff_zero = ADC_SAR_DIFF_SHIFT;
 628:.\Generated_Source\PSoC5/ADC.c ****             #endif /* End ADC_DEFAULT_RANGE */
 629:.\Generated_Source\PSoC5/ADC.c ****             break;
 630:.\Generated_Source\PSoC5/ADC.c ****         case (uint8)ADC__BITS_10:
 631:.\Generated_Source\PSoC5/ADC.c ****             counts = (int32)ADC_SAR_WRK_MAX_10BIT;
 632:.\Generated_Source\PSoC5/ADC.c ****             #if(!((ADC_DEFAULT_RANGE == ADC__VSS_TO_VREF) || \
 633:.\Generated_Source\PSoC5/ADC.c ****                  (ADC_DEFAULT_RANGE == ADC__VSSA_TO_VDDA) || \
 634:.\Generated_Source\PSoC5/ADC.c ****                  (ADC_DEFAULT_RANGE == ADC__VSSA_TO_VDAC)) )
 635:.\Generated_Source\PSoC5/ADC.c ****                 diff_zero = ADC_SAR_DIFF_SHIFT >> 2u;
 636:.\Generated_Source\PSoC5/ADC.c ****             #endif /* End ADC_DEFAULT_RANGE */
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 13


 637:.\Generated_Source\PSoC5/ADC.c ****             break;
 638:.\Generated_Source\PSoC5/ADC.c ****         case (uint8)ADC__BITS_8:
 639:.\Generated_Source\PSoC5/ADC.c ****             counts = (int32)ADC_SAR_WRK_MAX_8BIT;
  49              		.loc 1 639 0
  50 0016 4FF48073 		mov	r3, #256
 640:.\Generated_Source\PSoC5/ADC.c ****             #if(!((ADC_DEFAULT_RANGE == ADC__VSS_TO_VREF) || \
 641:.\Generated_Source\PSoC5/ADC.c ****                  (ADC_DEFAULT_RANGE == ADC__VSSA_TO_VDDA) || \
 642:.\Generated_Source\PSoC5/ADC.c ****                  (ADC_DEFAULT_RANGE == ADC__VSSA_TO_VDAC)) )
 643:.\Generated_Source\PSoC5/ADC.c ****                 diff_zero = ADC_SAR_DIFF_SHIFT >> 4u;
 644:.\Generated_Source\PSoC5/ADC.c ****             #endif /* End ADC_DEFAULT_RANGE */
 645:.\Generated_Source\PSoC5/ADC.c ****             break;
  51              		.loc 1 645 0
  52 001a 06E0     		b	.L3
  53              	.LVL2:
  54              	.L8:
 646:.\Generated_Source\PSoC5/ADC.c ****         default: /* Halt CPU in debug mode if resolution is out of valid range */
 647:.\Generated_Source\PSoC5/ADC.c ****             counts = 0;
 648:.\Generated_Source\PSoC5/ADC.c ****             #if(!((ADC_DEFAULT_RANGE == ADC__VSS_TO_VREF) || \
 649:.\Generated_Source\PSoC5/ADC.c ****                  (ADC_DEFAULT_RANGE == ADC__VSSA_TO_VDDA) || \
 650:.\Generated_Source\PSoC5/ADC.c ****                  (ADC_DEFAULT_RANGE == ADC__VSSA_TO_VDAC)) )
 651:.\Generated_Source\PSoC5/ADC.c ****                 diff_zero = 0u;
 652:.\Generated_Source\PSoC5/ADC.c ****             #endif /* End ADC_DEFAULT_RANGE */
 653:.\Generated_Source\PSoC5/ADC.c ****             CYASSERT(0u != 0u);
  55              		.loc 1 653 0
  56 001c 0020     		movs	r0, #0
  57              	.LVL3:
  58 001e FFF7FEFF 		bl	CyHalt
  59              	.LVL4:
 647:.\Generated_Source\PSoC5/ADC.c ****             counts = 0;
  60              		.loc 1 647 0
  61 0022 0023     		movs	r3, #0
  62 0024 01E0     		b	.L3
  63              	.LVL5:
  64              	.L7:
 631:.\Generated_Source\PSoC5/ADC.c ****             counts = (int32)ADC_SAR_WRK_MAX_10BIT;
  65              		.loc 1 631 0
  66 0026 4FF48063 		mov	r3, #1024
  67              	.LVL6:
  68              	.L3:
 654:.\Generated_Source\PSoC5/ADC.c ****             break;
 655:.\Generated_Source\PSoC5/ADC.c ****     }
 656:.\Generated_Source\PSoC5/ADC.c ****     ADC_countsPerVolt = 0; /* Clear obsolete variable */
  69              		.loc 1 656 0
  70 002a 0021     		movs	r1, #0
  71 002c 084A     		ldr	r2, .L9
  72 002e 1180     		strh	r1, [r2]	@ movhi
 657:.\Generated_Source\PSoC5/ADC.c ****     /* Calculate gain in counts per 10 volts with rounding */
 658:.\Generated_Source\PSoC5/ADC.c ****     ADC_countsPer10Volt = (((counts * ADC_10MV_COUNTS) +
  73              		.loc 1 658 0
  74 0030 42F21072 		movw	r2, #10000
  75 0034 02FB03F3 		mul	r3, r2, r3
  76              	.LVL7:
 659:.\Generated_Source\PSoC5/ADC.c ****                         ADC_DEFAULT_REF_VOLTAGE_MV) / (ADC_DEFAULT_REF_VOLTAGE_MV * 2));
  77              		.loc 1 659 0
  78 0038 13F58063 		adds	r3, r3, #1024
  79 003c 01D5     		bpl	.L6
  80 003e 03F2FF73 		addw	r3, r3, #2047
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 14


  81              	.L6:
  82 0042 DB12     		asrs	r3, r3, #11
 658:.\Generated_Source\PSoC5/ADC.c ****     ADC_countsPer10Volt = (((counts * ADC_10MV_COUNTS) +
  83              		.loc 1 658 0
  84 0044 034A     		ldr	r2, .L9+4
  85 0046 1360     		str	r3, [r2]
 660:.\Generated_Source\PSoC5/ADC.c **** 
 661:.\Generated_Source\PSoC5/ADC.c ****     #if( (ADC_DEFAULT_RANGE == ADC__VSS_TO_VREF) || \
 662:.\Generated_Source\PSoC5/ADC.c ****          (ADC_DEFAULT_RANGE == ADC__VSSA_TO_VDDA) || \
 663:.\Generated_Source\PSoC5/ADC.c ****          (ADC_DEFAULT_RANGE == ADC__VSSA_TO_VDAC) )
 664:.\Generated_Source\PSoC5/ADC.c ****         ADC_shift = 0;
  86              		.loc 1 664 0
  87 0048 0022     		movs	r2, #0
  88 004a 034B     		ldr	r3, .L9+8
  89 004c 1A80     		strh	r2, [r3]	@ movhi
  90 004e 08BD     		pop	{r3, pc}
  91              	.L10:
  92              		.align	2
  93              	.L9:
  94 0050 00000000 		.word	ADC_countsPerVolt
  95 0054 00000000 		.word	ADC_countsPer10Volt
  96 0058 00000000 		.word	ADC_shift
  97              		.cfi_endproc
  98              	.LFE12:
  99              		.size	ADC_CalcGain, .-ADC_CalcGain
 100              		.section	.text.ADC_Enable,"ax",%progbits
 101              		.align	2
 102              		.global	ADC_Enable
 103              		.thumb
 104              		.thumb_func
 105              		.type	ADC_Enable, %function
 106              	ADC_Enable:
 107              	.LFB2:
 144:.\Generated_Source\PSoC5/ADC.c **** {
 108              		.loc 1 144 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112 0000 10B5     		push	{r4, lr}
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 4, -8
 115              		.cfi_offset 14, -4
 147:.\Generated_Source\PSoC5/ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 116              		.loc 1 147 0
 117 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 118              	.LVL8:
 119 0006 0446     		mov	r4, r0
 120              	.LVL9:
 150:.\Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_SAR_REG |= ADC_ACT_PWR_SAR_EN;
 121              		.loc 1 150 0
 122 0008 1F4B     		ldr	r3, .L12
 123 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 124 000c 42F00202 		orr	r2, r2, #2
 125 0010 1A70     		strb	r2, [r3]
 153:.\Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_SAR_REG |= ADC_STBY_PWR_SAR_EN;
 126              		.loc 1 153 0
 127 0012 1033     		adds	r3, r3, #16
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 15


 128 0014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 129 0016 42F00202 		orr	r2, r2, #2
 130 001a 1A70     		strb	r2, [r3]
 157:.\Generated_Source\PSoC5/ADC.c ****         ADC_PWRMGR_CLK_REG |= ADC_ACT_PWR_CLK_EN;
 131              		.loc 1 157 0
 132 001c 193B     		subs	r3, r3, #25
 133 001e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 134 0020 42F00102 		orr	r2, r2, #1
 135 0024 1A70     		strb	r2, [r3]
 158:.\Generated_Source\PSoC5/ADC.c ****         ADC_STBY_PWRMGR_CLK_REG |= ADC_STBY_PWR_CLK_EN;
 136              		.loc 1 158 0
 137 0026 1033     		adds	r3, r3, #16
 138 0028 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 139 002a 42F00102 		orr	r2, r2, #1
 140 002e 1A70     		strb	r2, [r3]
 162:.\Generated_Source\PSoC5/ADC.c ****     tmpReg = ADC_SAR_CSR3_REG;
 141              		.loc 1 162 0
 142 0030 03F5AA53 		add	r3, r3, #5440
 143 0034 1933     		adds	r3, r3, #25
 144 0036 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 145              	.LVL10:
 169:.\Generated_Source\PSoC5/ADC.c ****         tmpReg |= ADC_SAR_EN_BUF_VREF_EN;
 146              		.loc 1 169 0
 147 0038 42F00302 		orr	r2, r2, #3
 148              	.LVL11:
 171:.\Generated_Source\PSoC5/ADC.c ****     ADC_SAR_CSR3_REG = tmpReg;
 149              		.loc 1 171 0
 150 003c 1A70     		strb	r2, [r3]
 184:.\Generated_Source\PSoC5/ADC.c ****             ADC_SAR_CSR6_REG = ADC_INT_BYPASS_EXT_VREF; /* S2 */
 151              		.loc 1 184 0
 152 003e 0422     		movs	r2, #4
 153              	.LVL12:
 154 0040 0333     		adds	r3, r3, #3
 155 0042 1A70     		strb	r2, [r3]
 190:.\Generated_Source\PSoC5/ADC.c ****         ADC_SAR_CSR5_REG &= (uint8)~ADC_SAR_DLY_INC;
 156              		.loc 1 190 0
 157 0044 013B     		subs	r3, r3, #1
 158 0046 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 159 0048 02F0BF02 		and	r2, r2, #191
 160 004c 1A70     		strb	r2, [r3]
 200:.\Generated_Source\PSoC5/ADC.c ****         ADC_SAR_CSR5_REG |= ADC_SAR_SEL_CSEL_DFT_CHAR;
 161              		.loc 1 200 0
 162 004e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 163 0050 42F00302 		orr	r2, r2, #3
 164 0054 1A70     		strb	r2, [r3]
 206:.\Generated_Source\PSoC5/ADC.c ****     ADC_SAR_CSR0_REG = (uint8)((uint8)ADC_DEFAULT_POWER << ADC_SAR_POWER_SHIFT)
 165              		.loc 1 206 0
 166 0056 0822     		movs	r2, #8
 167 0058 053B     		subs	r3, r3, #5
 168 005a 1A70     		strb	r2, [r3]
 218:.\Generated_Source\PSoC5/ADC.c ****     ADC_SAR_TR0_REG = ADC_SAR_CAP_TRIM_2;
 169              		.loc 1 218 0
 170 005c 0222     		movs	r2, #2
 171 005e A3F59753 		sub	r3, r3, #4832
 172 0062 123B     		subs	r3, r3, #18
 173 0064 1A70     		strb	r2, [r3]
 221:.\Generated_Source\PSoC5/ADC.c ****     ADC_SAR_CLK_REG |= ADC_SAR_MX_CLK_EN;
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 16


 174              		.loc 1 221 0
 175 0066 03F5A853 		add	r3, r3, #5376
 176 006a 1933     		adds	r3, r3, #25
 177 006c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 178 006e 42F00802 		orr	r2, r2, #8
 179 0072 1A70     		strb	r2, [r3]
 223:.\Generated_Source\PSoC5/ADC.c ****     CyDelayUs(10u); /* The block is ready to use 10 us after the enable signal is set high. */
 180              		.loc 1 223 0
 181 0074 0A20     		movs	r0, #10
 182              	.LVL13:
 183 0076 FFF7FEFF 		bl	CyDelayUs
 184              	.LVL14:
 227:.\Generated_Source\PSoC5/ADC.c ****         CyIntClearPending(ADC_INTC_NUMBER);
 185              		.loc 1 227 0
 186 007a 0122     		movs	r2, #1
 187 007c 034B     		ldr	r3, .L12+4
 188 007e 1A60     		str	r2, [r3]
 230:.\Generated_Source\PSoC5/ADC.c ****     CyExitCriticalSection(enableInterrupts);
 189              		.loc 1 230 0
 190 0080 2046     		mov	r0, r4
 191 0082 FFF7FEFF 		bl	CyExitCriticalSection
 192              	.LVL15:
 193 0086 10BD     		pop	{r4, pc}
 194              	.LVL16:
 195              	.L13:
 196              		.align	2
 197              	.L12:
 198 0088 AB430040 		.word	1073759147
 199 008c 80E200E0 		.word	-536812928
 200              		.cfi_endproc
 201              	.LFE2:
 202              		.size	ADC_Enable, .-ADC_Enable
 203              		.section	.text.ADC_Stop,"ax",%progbits
 204              		.align	2
 205              		.global	ADC_Stop
 206              		.thumb
 207              		.thumb_func
 208              		.type	ADC_Stop, %function
 209              	ADC_Stop:
 210              	.LFB3:
 249:.\Generated_Source\PSoC5/ADC.c **** {
 211              		.loc 1 249 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215 0000 08B5     		push	{r3, lr}
 216              		.cfi_def_cfa_offset 8
 217              		.cfi_offset 3, -8
 218              		.cfi_offset 14, -4
 251:.\Generated_Source\PSoC5/ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 219              		.loc 1 251 0
 220 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 221              	.LVL17:
 254:.\Generated_Source\PSoC5/ADC.c ****     ADC_SAR_CSR0_REG &= (uint8)~ADC_SAR_SOF_START_CONV;
 222              		.loc 1 254 0
 223 0006 0F4B     		ldr	r3, .L15
 224 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 17


 225 000a 02F0FE02 		and	r2, r2, #254
 226 000e 1A70     		strb	r2, [r3]
 256:.\Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_SAR_REG &= (uint8)~ADC_ACT_PWR_SAR_EN;
 227              		.loc 1 256 0
 228 0010 A3F5AA53 		sub	r3, r3, #5440
 229 0014 1D3B     		subs	r3, r3, #29
 230 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 231 0018 02F0FD02 		and	r2, r2, #253
 232 001c 1A70     		strb	r2, [r3]
 258:.\Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_SAR_REG &= (uint8)~ADC_STBY_PWR_SAR_EN;
 233              		.loc 1 258 0
 234 001e 1033     		adds	r3, r3, #16
 235 0020 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 236 0022 02F0FD02 		and	r2, r2, #253
 237 0026 1A70     		strb	r2, [r3]
 262:.\Generated_Source\PSoC5/ADC.c ****         ADC_PWRMGR_CLK_REG &= (uint8)~ADC_ACT_PWR_CLK_EN;
 238              		.loc 1 262 0
 239 0028 193B     		subs	r3, r3, #25
 240 002a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 241 002c 02F0FE02 		and	r2, r2, #254
 242 0030 1A70     		strb	r2, [r3]
 263:.\Generated_Source\PSoC5/ADC.c ****         ADC_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_STBY_PWR_CLK_EN;
 243              		.loc 1 263 0
 244 0032 1033     		adds	r3, r3, #16
 245 0034 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 246 0036 02F0FE02 		and	r2, r2, #254
 247 003a 1A70     		strb	r2, [r3]
 266:.\Generated_Source\PSoC5/ADC.c ****     CyExitCriticalSection(enableInterrupts);
 248              		.loc 1 266 0
 249 003c FFF7FEFF 		bl	CyExitCriticalSection
 250              	.LVL18:
 251 0040 08BD     		pop	{r3, pc}
 252              	.L16:
 253 0042 00BF     		.align	2
 254              	.L15:
 255 0044 08590040 		.word	1073764616
 256              		.cfi_endproc
 257              	.LFE3:
 258              		.size	ADC_Stop, .-ADC_Stop
 259              		.section	.text.ADC_SetPower,"ax",%progbits
 260              		.align	2
 261              		.global	ADC_SetPower
 262              		.thumb
 263              		.thumb_func
 264              		.type	ADC_SetPower, %function
 265              	ADC_SetPower:
 266              	.LFB4:
 291:.\Generated_Source\PSoC5/ADC.c **** {
 267              		.loc 1 291 0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271              		@ link register save eliminated.
 272              	.LVL19:
 295:.\Generated_Source\PSoC5/ADC.c ****     power &= ADC_SAR_API_POWER_MASK;
 273              		.loc 1 295 0
 274 0000 00F00300 		and	r0, r0, #3
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 18


 275              	.LVL20:
 298:.\Generated_Source\PSoC5/ADC.c ****     tmpReg = ADC_SAR_CSR0_REG & (uint8)~ADC_SAR_POWER_MASK;
 276              		.loc 1 298 0
 277 0004 034B     		ldr	r3, .L18
 278 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 279 0008 02F03F02 		and	r2, r2, #63
 280              	.LVL21:
 299:.\Generated_Source\PSoC5/ADC.c ****     tmpReg |= (uint8)(power << ADC_SAR_POWER_SHIFT);
 281              		.loc 1 299 0
 282 000c 42EA8010 		orr	r0, r2, r0, lsl #6
 283              	.LVL22:
 300:.\Generated_Source\PSoC5/ADC.c ****     ADC_SAR_CSR0_REG = tmpReg;
 284              		.loc 1 300 0
 285 0010 1870     		strb	r0, [r3]
 286 0012 7047     		bx	lr
 287              	.L19:
 288              		.align	2
 289              	.L18:
 290 0014 08590040 		.word	1073764616
 291              		.cfi_endproc
 292              	.LFE4:
 293              		.size	ADC_SetPower, .-ADC_SetPower
 294              		.section	.text.ADC_SetResolution,"ax",%progbits
 295              		.align	2
 296              		.global	ADC_SetResolution
 297              		.thumb
 298              		.thumb_func
 299              		.type	ADC_SetResolution, %function
 300              	ADC_SetResolution:
 301              	.LFB5:
 341:.\Generated_Source\PSoC5/ADC.c **** {
 302              		.loc 1 341 0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 0
 305              		@ frame_needed = 0, uses_anonymous_args = 0
 306              	.LVL23:
 307 0000 10B5     		push	{r4, lr}
 308              		.cfi_def_cfa_offset 8
 309              		.cfi_offset 4, -8
 310              		.cfi_offset 14, -4
 311 0002 0446     		mov	r4, r0
 345:.\Generated_Source\PSoC5/ADC.c ****     switch (resolution)
 312              		.loc 1 345 0
 313 0004 0A28     		cmp	r0, #10
 314 0006 0DD0     		beq	.L25
 315 0008 0C28     		cmp	r0, #12
 316 000a 02D0     		beq	.L23
 317 000c 0828     		cmp	r0, #8
 318 000e 04D1     		bne	.L26
 319 0010 01E0     		b	.L24
 320              	.L23:
 348:.\Generated_Source\PSoC5/ADC.c ****             tmpReg = ADC_SAR_RESOLUTION_12BIT | ADC_SAR_SAMPLE_WIDTH;
 321              		.loc 1 348 0
 322 0012 C422     		movs	r2, #196
 323 0014 07E0     		b	.L22
 324              	.L24:
 325              	.LVL24:
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 19


 354:.\Generated_Source\PSoC5/ADC.c ****             tmpReg = ADC_SAR_RESOLUTION_8BIT | ADC_SAR_SAMPLE_WIDTH;
 326              		.loc 1 354 0
 327 0016 4422     		movs	r2, #68
 355:.\Generated_Source\PSoC5/ADC.c ****             break;
 328              		.loc 1 355 0
 329 0018 05E0     		b	.L22
 330              	.LVL25:
 331              	.L26:
 359:.\Generated_Source\PSoC5/ADC.c ****             CYASSERT(0u != 0u);
 332              		.loc 1 359 0
 333 001a 0020     		movs	r0, #0
 334              	.LVL26:
 335 001c FFF7FEFF 		bl	CyHalt
 336              	.LVL27:
 357:.\Generated_Source\PSoC5/ADC.c ****             tmpReg = ADC_SAR_RESOLUTION_12BIT | ADC_SAR_SAMPLE_WIDTH;
 337              		.loc 1 357 0
 338 0020 C422     		movs	r2, #196
 339 0022 00E0     		b	.L22
 340              	.LVL28:
 341              	.L25:
 351:.\Generated_Source\PSoC5/ADC.c ****             tmpReg = ADC_SAR_RESOLUTION_10BIT | ADC_SAR_SAMPLE_WIDTH;
 342              		.loc 1 351 0
 343 0024 8422     		movs	r2, #132
 344              	.LVL29:
 345              	.L22:
 362:.\Generated_Source\PSoC5/ADC.c ****     ADC_SAR_CSR2_REG = tmpReg;
 346              		.loc 1 362 0
 347 0026 034B     		ldr	r3, .L27
 348 0028 1A70     		strb	r2, [r3]
 365:.\Generated_Source\PSoC5/ADC.c ****     ADC_CalcGain(resolution);
 349              		.loc 1 365 0
 350 002a 2046     		mov	r0, r4
 351 002c FFF7FEFF 		bl	ADC_CalcGain
 352              	.LVL30:
 353 0030 10BD     		pop	{r4, pc}
 354              	.L28:
 355 0032 00BF     		.align	2
 356              	.L27:
 357 0034 0A590040 		.word	1073764618
 358              		.cfi_endproc
 359              	.LFE5:
 360              		.size	ADC_SetResolution, .-ADC_SetResolution
 361              		.section	.text.ADC_Init,"ax",%progbits
 362              		.align	2
 363              		.global	ADC_Init
 364              		.thumb
 365              		.thumb_func
 366              		.type	ADC_Init, %function
 367              	ADC_Init:
 368              	.LFB1:
 107:.\Generated_Source\PSoC5/ADC.c **** {
 369              		.loc 1 107 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373 0000 08B5     		push	{r3, lr}
 374              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 20


 375              		.cfi_offset 3, -8
 376              		.cfi_offset 14, -4
 111:.\Generated_Source\PSoC5/ADC.c ****         ADC_theACLK_SetMode(CYCLK_DUTY);
 377              		.loc 1 111 0
 378 0002 1020     		movs	r0, #16
 379 0004 FFF7FEFF 		bl	ADC_theACLK_SetModeRegister
 380              	.LVL31:
 116:.\Generated_Source\PSoC5/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
 381              		.loc 1 116 0
 382 0008 0020     		movs	r0, #0
 383 000a 0721     		movs	r1, #7
 384 000c FFF7FEFF 		bl	CyIntSetPriority
 385              	.LVL32:
 117:.\Generated_Source\PSoC5/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
 386              		.loc 1 117 0
 387 0010 0020     		movs	r0, #0
 388 0012 0749     		ldr	r1, .L30
 389 0014 FFF7FEFF 		bl	CyIntSetVector
 390              	.LVL33:
 121:.\Generated_Source\PSoC5/ADC.c ****     ADC_SAR_CSR1_REG |= ADC_SAR_IRQ_MASK_EN | ADC_SAR_IRQ_MODE_EDGE;
 391              		.loc 1 121 0
 392 0018 064B     		ldr	r3, .L30+4
 393 001a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 394 001c 42F00602 		orr	r2, r2, #6
 395 0020 1A70     		strb	r2, [r3]
 124:.\Generated_Source\PSoC5/ADC.c ****     ADC_SetResolution(ADC_DEFAULT_RESOLUTION);
 396              		.loc 1 124 0
 397 0022 0C20     		movs	r0, #12
 398 0024 FFF7FEFF 		bl	ADC_SetResolution
 399              	.LVL34:
 125:.\Generated_Source\PSoC5/ADC.c ****     ADC_offset = 0;
 400              		.loc 1 125 0
 401 0028 0022     		movs	r2, #0
 402 002a 034B     		ldr	r3, .L30+8
 403 002c 1A80     		strh	r2, [r3]	@ movhi
 404 002e 08BD     		pop	{r3, pc}
 405              	.L31:
 406              		.align	2
 407              	.L30:
 408 0030 00000000 		.word	ADC_ISR
 409 0034 09590040 		.word	1073764617
 410 0038 00000000 		.word	ADC_offset
 411              		.cfi_endproc
 412              	.LFE1:
 413              		.size	ADC_Init, .-ADC_Init
 414              		.section	.text.ADC_Start,"ax",%progbits
 415              		.align	2
 416              		.global	ADC_Start
 417              		.thumb
 418              		.thumb_func
 419              		.type	ADC_Start, %function
 420              	ADC_Start:
 421              	.LFB0:
  75:.\Generated_Source\PSoC5/ADC.c **** {
 422              		.loc 1 75 0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 21


 425              		@ frame_needed = 0, uses_anonymous_args = 0
 426 0000 08B5     		push	{r3, lr}
 427              		.cfi_def_cfa_offset 8
 428              		.cfi_offset 3, -8
 429              		.cfi_offset 14, -4
  78:.\Generated_Source\PSoC5/ADC.c ****     if(ADC_initVar == 0u)
 430              		.loc 1 78 0
 431 0002 054B     		ldr	r3, .L34
 432 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 433 0006 23B9     		cbnz	r3, .L33
  80:.\Generated_Source\PSoC5/ADC.c ****         ADC_Init();
 434              		.loc 1 80 0
 435 0008 FFF7FEFF 		bl	ADC_Init
 436              	.LVL35:
  81:.\Generated_Source\PSoC5/ADC.c ****         ADC_initVar = 1u;
 437              		.loc 1 81 0
 438 000c 0122     		movs	r2, #1
 439 000e 024B     		ldr	r3, .L34
 440 0010 1A70     		strb	r2, [r3]
 441              	.L33:
  83:.\Generated_Source\PSoC5/ADC.c ****     ADC_Enable();
 442              		.loc 1 83 0
 443 0012 FFF7FEFF 		bl	ADC_Enable
 444              	.LVL36:
 445 0016 08BD     		pop	{r3, pc}
 446              	.L35:
 447              		.align	2
 448              	.L34:
 449 0018 00000000 		.word	.LANCHOR0
 450              		.cfi_endproc
 451              	.LFE0:
 452              		.size	ADC_Start, .-ADC_Start
 453              		.section	.text.ADC_StartConvert,"ax",%progbits
 454              		.align	2
 455              		.global	ADC_StartConvert
 456              		.thumb
 457              		.thumb_func
 458              		.type	ADC_StartConvert, %function
 459              	ADC_StartConvert:
 460              	.LFB6:
 402:.\Generated_Source\PSoC5/ADC.c ****     {
 461              		.loc 1 402 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 0
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465              		@ link register save eliminated.
 408:.\Generated_Source\PSoC5/ADC.c ****         ADC_SAR_CSR0_REG |= ADC_SAR_SOF_START_CONV;
 466              		.loc 1 408 0
 467 0000 024B     		ldr	r3, .L37
 468 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 469 0004 42F00102 		orr	r2, r2, #1
 470 0008 1A70     		strb	r2, [r3]
 471 000a 7047     		bx	lr
 472              	.L38:
 473              		.align	2
 474              	.L37:
 475 000c 08590040 		.word	1073764616
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 22


 476              		.cfi_endproc
 477              	.LFE6:
 478              		.size	ADC_StartConvert, .-ADC_StartConvert
 479              		.section	.text.ADC_StopConvert,"ax",%progbits
 480              		.align	2
 481              		.global	ADC_StopConvert
 482              		.thumb
 483              		.thumb_func
 484              		.type	ADC_StopConvert, %function
 485              	ADC_StopConvert:
 486              	.LFB7:
 436:.\Generated_Source\PSoC5/ADC.c ****     {
 487              		.loc 1 436 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491              		@ link register save eliminated.
 438:.\Generated_Source\PSoC5/ADC.c ****         ADC_SAR_CSR0_REG &= (uint8)~ADC_SAR_SOF_START_CONV;
 492              		.loc 1 438 0
 493 0000 024B     		ldr	r3, .L40
 494 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 495 0004 02F0FE02 		and	r2, r2, #254
 496 0008 1A70     		strb	r2, [r3]
 497 000a 7047     		bx	lr
 498              	.L41:
 499              		.align	2
 500              	.L40:
 501 000c 08590040 		.word	1073764616
 502              		.cfi_endproc
 503              	.LFE7:
 504              		.size	ADC_StopConvert, .-ADC_StopConvert
 505              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 506              		.align	2
 507              		.global	ADC_IsEndConversion
 508              		.thumb
 509              		.thumb_func
 510              		.type	ADC_IsEndConversion, %function
 511              	ADC_IsEndConversion:
 512              	.LFB8:
 476:.\Generated_Source\PSoC5/ADC.c **** {
 513              		.loc 1 476 0
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 0
 516              		@ frame_needed = 0, uses_anonymous_args = 0
 517              	.LVL37:
 518 0000 10B5     		push	{r4, lr}
 519              		.cfi_def_cfa_offset 8
 520              		.cfi_offset 4, -8
 521              		.cfi_offset 14, -4
 481:.\Generated_Source\PSoC5/ADC.c ****         status = ADC_SAR_CSR1_REG & ADC_SAR_EOF_1;
 522              		.loc 1 481 0
 523 0002 074A     		ldr	r2, .L47
 524              	.L44:
 481:.\Generated_Source\PSoC5/ADC.c ****         status = ADC_SAR_CSR1_REG & ADC_SAR_EOF_1;
 525              		.loc 1 481 0 is_stmt 0 discriminator 1
 526 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 527              	.LVL38:
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 23


 482:.\Generated_Source\PSoC5/ADC.c ****     } while ((status != ADC_SAR_EOF_1) && (retMode == ADC_WAIT_FOR_RESULT));
 528              		.loc 1 482 0 is_stmt 1 discriminator 1
 529 0006 13F00104 		ands	r4, r3, #1
 530 000a 01D1     		bne	.L43
 531 000c 0028     		cmp	r0, #0
 532 000e F9D0     		beq	.L44
 533              	.L43:
 484:.\Generated_Source\PSoC5/ADC.c ****     if(status == ADC_SAR_EOF_1)
 534              		.loc 1 484 0
 535 0010 24B1     		cbz	r4, .L45
 487:.\Generated_Source\PSoC5/ADC.c ****         CyDelayUs(1u);
 536              		.loc 1 487 0
 537 0012 0120     		movs	r0, #1
 538              	.LVL39:
 539 0014 FFF7FEFF 		bl	CyDelayUs
 540              	.LVL40:
 489:.\Generated_Source\PSoC5/ADC.c ****         CY_GET_REG8(ADC_SAR_CSR1_PTR);
 541              		.loc 1 489 0
 542 0018 014B     		ldr	r3, .L47
 543 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 544              	.L45:
 493:.\Generated_Source\PSoC5/ADC.c **** }
 545              		.loc 1 493 0
 546 001c 2046     		mov	r0, r4
 547 001e 10BD     		pop	{r4, pc}
 548              	.L48:
 549              		.align	2
 550              	.L47:
 551 0020 09590040 		.word	1073764617
 552              		.cfi_endproc
 553              	.LFE8:
 554              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 555              		.section	.text.ADC_GetResult8,"ax",%progbits
 556              		.align	2
 557              		.global	ADC_GetResult8
 558              		.thumb
 559              		.thumb_func
 560              		.type	ADC_GetResult8, %function
 561              	ADC_GetResult8:
 562              	.LFB9:
 521:.\Generated_Source\PSoC5/ADC.c **** {
 563              		.loc 1 521 0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 0
 566              		@ frame_needed = 0, uses_anonymous_args = 0
 567              		@ link register save eliminated.
 522:.\Generated_Source\PSoC5/ADC.c ****     return( (int8)ADC_SAR_WRK0_REG - (int8)ADC_shift);
 568              		.loc 1 522 0
 569 0000 034B     		ldr	r3, .L50
 570 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 571 0004 034B     		ldr	r3, .L50+4
 572 0006 1B88     		ldrh	r3, [r3]
 573 0008 C01A     		subs	r0, r0, r3
 523:.\Generated_Source\PSoC5/ADC.c **** }
 574              		.loc 1 523 0
 575 000a 40B2     		sxtb	r0, r0
 576 000c 7047     		bx	lr
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 24


 577              	.L51:
 578 000e 00BF     		.align	2
 579              	.L50:
 580 0010 A25B0040 		.word	1073765282
 581 0014 00000000 		.word	ADC_shift
 582              		.cfi_endproc
 583              	.LFE9:
 584              		.size	ADC_GetResult8, .-ADC_GetResult8
 585              		.section	.text.ADC_GetResult16,"ax",%progbits
 586              		.align	2
 587              		.global	ADC_GetResult16
 588              		.thumb
 589              		.thumb_func
 590              		.type	ADC_GetResult16, %function
 591              	ADC_GetResult16:
 592              	.LFB10:
 551:.\Generated_Source\PSoC5/ADC.c **** {
 593              		.loc 1 551 0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 0
 596              		@ frame_needed = 0, uses_anonymous_args = 0
 597              		@ link register save eliminated.
 554:.\Generated_Source\PSoC5/ADC.c ****     res = CY_GET_REG16(ADC_SAR_WRK_PTR);
 598              		.loc 1 554 0
 599 0000 034B     		ldr	r3, .L53
 600 0002 1888     		ldrh	r0, [r3]
 601              	.LVL41:
 556:.\Generated_Source\PSoC5/ADC.c ****     return( (int16)res - ADC_shift );
 602              		.loc 1 556 0
 603 0004 034B     		ldr	r3, .L53+4
 604 0006 1B88     		ldrh	r3, [r3]
 605 0008 C01A     		subs	r0, r0, r3
 606              	.LVL42:
 557:.\Generated_Source\PSoC5/ADC.c **** }
 607              		.loc 1 557 0
 608 000a 00B2     		sxth	r0, r0
 609 000c 7047     		bx	lr
 610              	.L54:
 611 000e 00BF     		.align	2
 612              	.L53:
 613 0010 A25B0040 		.word	1073765282
 614 0014 00000000 		.word	ADC_shift
 615              		.cfi_endproc
 616              	.LFE10:
 617              		.size	ADC_GetResult16, .-ADC_GetResult16
 618              		.section	.text.ADC_SetOffset,"ax",%progbits
 619              		.align	2
 620              		.global	ADC_SetOffset
 621              		.thumb
 622              		.thumb_func
 623              		.type	ADC_SetOffset, %function
 624              	ADC_SetOffset:
 625              	.LFB11:
 586:.\Generated_Source\PSoC5/ADC.c **** {
 626              		.loc 1 586 0
 627              		.cfi_startproc
 628              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 25


 629              		@ frame_needed = 0, uses_anonymous_args = 0
 630              		@ link register save eliminated.
 631              	.LVL43:
 587:.\Generated_Source\PSoC5/ADC.c ****     ADC_offset = offset;
 632              		.loc 1 587 0
 633 0000 014B     		ldr	r3, .L56
 634 0002 1880     		strh	r0, [r3]	@ movhi
 635 0004 7047     		bx	lr
 636              	.L57:
 637 0006 00BF     		.align	2
 638              	.L56:
 639 0008 00000000 		.word	ADC_offset
 640              		.cfi_endproc
 641              	.LFE11:
 642              		.size	ADC_SetOffset, .-ADC_SetOffset
 643              		.section	.text.ADC_SetGain,"ax",%progbits
 644              		.align	2
 645              		.global	ADC_SetGain
 646              		.thumb
 647              		.thumb_func
 648              		.type	ADC_SetGain, %function
 649              	ADC_SetGain:
 650              	.LFB13:
 665:.\Generated_Source\PSoC5/ADC.c ****     #else
 666:.\Generated_Source\PSoC5/ADC.c ****         ADC_shift = diff_zero;
 667:.\Generated_Source\PSoC5/ADC.c ****     #endif /* End ADC_DEFAULT_RANGE */
 668:.\Generated_Source\PSoC5/ADC.c **** }
 669:.\Generated_Source\PSoC5/ADC.c **** 
 670:.\Generated_Source\PSoC5/ADC.c **** 
 671:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetGain
 673:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 674:.\Generated_Source\PSoC5/ADC.c **** *
 675:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 676:.\Generated_Source\PSoC5/ADC.c **** *  Sets the ADC gain in counts per volt for the voltage conversion functions
 677:.\Generated_Source\PSoC5/ADC.c **** *  that follow. This value is set by default by the reference and input range
 678:.\Generated_Source\PSoC5/ADC.c **** *  settings. It should only be used to further calibrate the ADC with a known
 679:.\Generated_Source\PSoC5/ADC.c **** *  input or if the ADC is using an external reference.
 680:.\Generated_Source\PSoC5/ADC.c **** *
 681:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 682:.\Generated_Source\PSoC5/ADC.c **** *  int16 adcGain counts per volt
 683:.\Generated_Source\PSoC5/ADC.c **** *
 684:.\Generated_Source\PSoC5/ADC.c **** * Return:
 685:.\Generated_Source\PSoC5/ADC.c **** *  None.
 686:.\Generated_Source\PSoC5/ADC.c **** *
 687:.\Generated_Source\PSoC5/ADC.c **** * Global Variables:
 688:.\Generated_Source\PSoC5/ADC.c **** *  ADC_countsPer10Volt variable modified. This variable is used
 689:.\Generated_Source\PSoC5/ADC.c **** *  for gain calibration purpose.
 690:.\Generated_Source\PSoC5/ADC.c **** *
 691:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 692:.\Generated_Source\PSoC5/ADC.c **** void ADC_SetGain(int16 adcGain)
 693:.\Generated_Source\PSoC5/ADC.c **** {
 651              		.loc 1 693 0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 0
 654              		@ frame_needed = 0, uses_anonymous_args = 0
 655              		@ link register save eliminated.
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 26


 656              	.LVL44:
 694:.\Generated_Source\PSoC5/ADC.c ****     ADC_countsPer10Volt = (int32)adcGain * 10;
 657              		.loc 1 694 0
 658 0000 00EB8000 		add	r0, r0, r0, lsl #2
 659              	.LVL45:
 660 0004 4000     		lsls	r0, r0, #1
 661 0006 014B     		ldr	r3, .L59
 662 0008 1860     		str	r0, [r3]
 663 000a 7047     		bx	lr
 664              	.L60:
 665              		.align	2
 666              	.L59:
 667 000c 00000000 		.word	ADC_countsPer10Volt
 668              		.cfi_endproc
 669              	.LFE13:
 670              		.size	ADC_SetGain, .-ADC_SetGain
 671              		.section	.text.ADC_SetScaledGain,"ax",%progbits
 672              		.align	2
 673              		.global	ADC_SetScaledGain
 674              		.thumb
 675              		.thumb_func
 676              		.type	ADC_SetScaledGain, %function
 677              	ADC_SetScaledGain:
 678              	.LFB14:
 695:.\Generated_Source\PSoC5/ADC.c **** }
 696:.\Generated_Source\PSoC5/ADC.c **** 
 697:.\Generated_Source\PSoC5/ADC.c **** 
 698:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetScaledGain
 700:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 701:.\Generated_Source\PSoC5/ADC.c **** *
 702:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 703:.\Generated_Source\PSoC5/ADC.c **** *  Sets the ADC gain in counts per 10 volt for the voltage conversion functions
 704:.\Generated_Source\PSoC5/ADC.c **** *  that follow. This value is set by default by the reference and input range
 705:.\Generated_Source\PSoC5/ADC.c **** *  settings. It should only be used to further calibrate the ADC with a known
 706:.\Generated_Source\PSoC5/ADC.c **** *  input or if the ADC is using an external reference.
 707:.\Generated_Source\PSoC5/ADC.c **** *
 708:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 709:.\Generated_Source\PSoC5/ADC.c **** *  int32 adcGain  counts per 10 volt
 710:.\Generated_Source\PSoC5/ADC.c **** *
 711:.\Generated_Source\PSoC5/ADC.c **** * Return:
 712:.\Generated_Source\PSoC5/ADC.c **** *  None.
 713:.\Generated_Source\PSoC5/ADC.c **** *
 714:.\Generated_Source\PSoC5/ADC.c **** * Global Variables:
 715:.\Generated_Source\PSoC5/ADC.c **** *  ADC_countsPer10Volt variable modified. This variable is used
 716:.\Generated_Source\PSoC5/ADC.c **** *  for gain calibration purpose.
 717:.\Generated_Source\PSoC5/ADC.c **** *
 718:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 719:.\Generated_Source\PSoC5/ADC.c **** void ADC_SetScaledGain(int32 adcGain)
 720:.\Generated_Source\PSoC5/ADC.c **** {
 679              		.loc 1 720 0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 0
 682              		@ frame_needed = 0, uses_anonymous_args = 0
 683              		@ link register save eliminated.
 684              	.LVL46:
 721:.\Generated_Source\PSoC5/ADC.c ****     ADC_countsPer10Volt = adcGain;
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 27


 685              		.loc 1 721 0
 686 0000 014B     		ldr	r3, .L62
 687 0002 1860     		str	r0, [r3]
 688 0004 7047     		bx	lr
 689              	.L63:
 690 0006 00BF     		.align	2
 691              	.L62:
 692 0008 00000000 		.word	ADC_countsPer10Volt
 693              		.cfi_endproc
 694              	.LFE14:
 695              		.size	ADC_SetScaledGain, .-ADC_SetScaledGain
 696              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 697              		.align	2
 698              		.global	ADC_CountsTo_mVolts
 699              		.thumb
 700              		.thumb_func
 701              		.type	ADC_CountsTo_mVolts, %function
 702              	ADC_CountsTo_mVolts:
 703              	.LFB15:
 722:.\Generated_Source\PSoC5/ADC.c **** }
 723:.\Generated_Source\PSoC5/ADC.c **** 
 724:.\Generated_Source\PSoC5/ADC.c **** 
 725:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 726:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_CountsTo_mVolts
 727:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 728:.\Generated_Source\PSoC5/ADC.c **** *
 729:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 730:.\Generated_Source\PSoC5/ADC.c **** *  Converts the ADC output to millivolts as a 16-bit integer.
 731:.\Generated_Source\PSoC5/ADC.c **** *
 732:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 733:.\Generated_Source\PSoC5/ADC.c **** *  int16 adcCounts:  Result from the ADC conversion
 734:.\Generated_Source\PSoC5/ADC.c **** *
 735:.\Generated_Source\PSoC5/ADC.c **** * Return:
 736:.\Generated_Source\PSoC5/ADC.c **** *  int16 Result in mVolts
 737:.\Generated_Source\PSoC5/ADC.c **** *
 738:.\Generated_Source\PSoC5/ADC.c **** * Global Variables:
 739:.\Generated_Source\PSoC5/ADC.c **** *  ADC_offset variable used.
 740:.\Generated_Source\PSoC5/ADC.c **** *  ADC_countsPer10Volt variable used.
 741:.\Generated_Source\PSoC5/ADC.c **** *
 742:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 743:.\Generated_Source\PSoC5/ADC.c **** int16 ADC_CountsTo_mVolts(int16 adcCounts)
 744:.\Generated_Source\PSoC5/ADC.c **** {
 704              		.loc 1 744 0
 705              		.cfi_startproc
 706              		@ args = 0, pretend = 0, frame = 0
 707              		@ frame_needed = 0, uses_anonymous_args = 0
 708              		@ link register save eliminated.
 709              	.LVL47:
 745:.\Generated_Source\PSoC5/ADC.c ****     int16 mVolts;
 746:.\Generated_Source\PSoC5/ADC.c ****     int32 countsPer10Volt;
 747:.\Generated_Source\PSoC5/ADC.c **** 
 748:.\Generated_Source\PSoC5/ADC.c ****     if(ADC_countsPerVolt != 0)
 710              		.loc 1 748 0
 711 0000 114B     		ldr	r3, .L69
 712 0002 1B88     		ldrh	r3, [r3]
 713 0004 9BB2     		uxth	r3, r3
 714 0006 33B1     		cbz	r3, .L65
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 28


 749:.\Generated_Source\PSoC5/ADC.c ****     {   /* Support obsolete method */
 750:.\Generated_Source\PSoC5/ADC.c ****         countsPer10Volt = (int32)ADC_countsPerVolt * 10;
 715              		.loc 1 750 0
 716 0008 0F4B     		ldr	r3, .L69
 717 000a 1B88     		ldrh	r3, [r3]
 718 000c 1BB2     		sxth	r3, r3
 719 000e 03EB8303 		add	r3, r3, r3, lsl #2
 720 0012 5B00     		lsls	r3, r3, #1
 721              	.LVL48:
 722 0014 01E0     		b	.L66
 723              	.LVL49:
 724              	.L65:
 751:.\Generated_Source\PSoC5/ADC.c ****     }
 752:.\Generated_Source\PSoC5/ADC.c ****     else
 753:.\Generated_Source\PSoC5/ADC.c ****     {
 754:.\Generated_Source\PSoC5/ADC.c ****         countsPer10Volt = ADC_countsPer10Volt;
 725              		.loc 1 754 0
 726 0016 0D4B     		ldr	r3, .L69+4
 727 0018 1B68     		ldr	r3, [r3]
 728              	.LVL50:
 729              	.L66:
 755:.\Generated_Source\PSoC5/ADC.c ****     }
 756:.\Generated_Source\PSoC5/ADC.c **** 
 757:.\Generated_Source\PSoC5/ADC.c ****     /* Subtract ADC offset */
 758:.\Generated_Source\PSoC5/ADC.c ****     adcCounts -= ADC_offset;
 730              		.loc 1 758 0
 731 001a 0D4A     		ldr	r2, .L69+8
 732 001c 1288     		ldrh	r2, [r2]
 733 001e 801A     		subs	r0, r0, r2
 734              	.LVL51:
 735 0020 00B2     		sxth	r0, r0
 736              	.LVL52:
 759:.\Generated_Source\PSoC5/ADC.c ****     /* Convert to millivolts with rounding */
 760:.\Generated_Source\PSoC5/ADC.c ****     mVolts = (int16)( (( (int32)adcCounts * ADC_10MV_COUNTS ) + ( (adcCounts > 0) ?
 737              		.loc 1 760 0
 738 0022 42F21071 		movw	r1, #10000
 739 0026 01FB00F1 		mul	r1, r1, r0
 761:.\Generated_Source\PSoC5/ADC.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 740              		.loc 1 761 0
 741 002a 0028     		cmp	r0, #0
 742 002c 03DD     		ble	.L67
 743              		.loc 1 761 0 is_stmt 0 discriminator 1
 744 002e 03EBD372 		add	r2, r3, r3, lsr #31
 745 0032 5210     		asrs	r2, r2, #1
 746 0034 03E0     		b	.L68
 747              	.L67:
 748              		.loc 1 761 0 discriminator 2
 749 0036 03EBD372 		add	r2, r3, r3, lsr #31
 750 003a 5210     		asrs	r2, r2, #1
 751 003c 5242     		negs	r2, r2
 752              	.L68:
 760:.\Generated_Source\PSoC5/ADC.c ****     mVolts = (int16)( (( (int32)adcCounts * ADC_10MV_COUNTS ) + ( (adcCounts > 0) ?
 753              		.loc 1 760 0 is_stmt 1
 754 003e 0A44     		add	r2, r2, r1
 755              		.loc 1 761 0
 756 0040 92FBF3F0 		sdiv	r0, r2, r3
 757              	.LVL53:
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 29


 762:.\Generated_Source\PSoC5/ADC.c **** 
 763:.\Generated_Source\PSoC5/ADC.c ****     return( mVolts );
 764:.\Generated_Source\PSoC5/ADC.c **** }
 758              		.loc 1 764 0
 759 0044 00B2     		sxth	r0, r0
 760              	.LVL54:
 761 0046 7047     		bx	lr
 762              	.L70:
 763              		.align	2
 764              	.L69:
 765 0048 00000000 		.word	ADC_countsPerVolt
 766 004c 00000000 		.word	ADC_countsPer10Volt
 767 0050 00000000 		.word	ADC_offset
 768              		.cfi_endproc
 769              	.LFE15:
 770              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 771              		.global	__aeabi_ldivmod
 772              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 773              		.align	2
 774              		.global	ADC_CountsTo_uVolts
 775              		.thumb
 776              		.thumb_func
 777              		.type	ADC_CountsTo_uVolts, %function
 778              	ADC_CountsTo_uVolts:
 779              	.LFB16:
 765:.\Generated_Source\PSoC5/ADC.c **** 
 766:.\Generated_Source\PSoC5/ADC.c **** 
 767:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 768:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_CountsTo_uVolts
 769:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 770:.\Generated_Source\PSoC5/ADC.c **** *
 771:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 772:.\Generated_Source\PSoC5/ADC.c **** *  Converts the ADC output to microvolts as a 32-bit integer.
 773:.\Generated_Source\PSoC5/ADC.c **** *
 774:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 775:.\Generated_Source\PSoC5/ADC.c **** *  int16 adcCounts: Result from the ADC conversion
 776:.\Generated_Source\PSoC5/ADC.c **** *
 777:.\Generated_Source\PSoC5/ADC.c **** * Return:
 778:.\Generated_Source\PSoC5/ADC.c **** *  int32 Result in micro Volts
 779:.\Generated_Source\PSoC5/ADC.c **** *
 780:.\Generated_Source\PSoC5/ADC.c **** * Global Variables:
 781:.\Generated_Source\PSoC5/ADC.c **** *  ADC_offset variable used.
 782:.\Generated_Source\PSoC5/ADC.c **** *  ADC_countsPer10Volt used to convert ADC counts to uVolts.
 783:.\Generated_Source\PSoC5/ADC.c **** *
 784:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 785:.\Generated_Source\PSoC5/ADC.c **** int32 ADC_CountsTo_uVolts(int16 adcCounts)
 786:.\Generated_Source\PSoC5/ADC.c **** {
 780              		.loc 1 786 0
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 0
 783              		@ frame_needed = 0, uses_anonymous_args = 0
 784              	.LVL55:
 785 0000 38B5     		push	{r3, r4, r5, lr}
 786              		.cfi_def_cfa_offset 16
 787              		.cfi_offset 3, -16
 788              		.cfi_offset 4, -12
 789              		.cfi_offset 5, -8
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 30


 790              		.cfi_offset 14, -4
 787:.\Generated_Source\PSoC5/ADC.c **** 
 788:.\Generated_Source\PSoC5/ADC.c ****     int64 uVolts;
 789:.\Generated_Source\PSoC5/ADC.c ****     int32 countsPer10Volt;
 790:.\Generated_Source\PSoC5/ADC.c **** 
 791:.\Generated_Source\PSoC5/ADC.c ****     if(ADC_countsPerVolt != 0)
 791              		.loc 1 791 0
 792 0002 0D4B     		ldr	r3, .L74
 793 0004 1B88     		ldrh	r3, [r3]
 794 0006 9BB2     		uxth	r3, r3
 795 0008 33B1     		cbz	r3, .L72
 792:.\Generated_Source\PSoC5/ADC.c ****     {   /* Support obsolete method */
 793:.\Generated_Source\PSoC5/ADC.c ****         countsPer10Volt = (int32)ADC_countsPerVolt * 10;
 796              		.loc 1 793 0
 797 000a 0B4B     		ldr	r3, .L74
 798 000c 1A88     		ldrh	r2, [r3]
 799 000e 12B2     		sxth	r2, r2
 800 0010 02EB8202 		add	r2, r2, r2, lsl #2
 801 0014 5200     		lsls	r2, r2, #1
 802              	.LVL56:
 803 0016 01E0     		b	.L73
 804              	.LVL57:
 805              	.L72:
 794:.\Generated_Source\PSoC5/ADC.c ****     }
 795:.\Generated_Source\PSoC5/ADC.c ****     else
 796:.\Generated_Source\PSoC5/ADC.c ****     {
 797:.\Generated_Source\PSoC5/ADC.c ****         countsPer10Volt = ADC_countsPer10Volt;
 806              		.loc 1 797 0
 807 0018 084B     		ldr	r3, .L74+4
 808 001a 1A68     		ldr	r2, [r3]
 809              	.LVL58:
 810              	.L73:
 798:.\Generated_Source\PSoC5/ADC.c ****     }
 799:.\Generated_Source\PSoC5/ADC.c **** 
 800:.\Generated_Source\PSoC5/ADC.c ****     /* Subtract ADC offset */
 801:.\Generated_Source\PSoC5/ADC.c ****     adcCounts -= ADC_offset;
 811              		.loc 1 801 0
 812 001c 084B     		ldr	r3, .L74+8
 813 001e 1B88     		ldrh	r3, [r3]
 814              	.LVL59:
 802:.\Generated_Source\PSoC5/ADC.c ****     /* To convert adcCounts to microVolts it is required to be multiplied
 803:.\Generated_Source\PSoC5/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 804:.\Generated_Source\PSoC5/ADC.c ****     */
 805:.\Generated_Source\PSoC5/ADC.c ****     uVolts = (( (int64)adcCounts * ADC_10UV_COUNTS ) / countsPer10Volt);
 815              		.loc 1 805 0
 816 0020 C41A     		subs	r4, r0, r3
 817 0022 24B2     		sxth	r4, r4
 818 0024 E517     		asrs	r5, r4, #31
 819 0026 074B     		ldr	r3, .L74+12
 820              	.LVL60:
 821 0028 A4FB0301 		umull	r0, r1, r4, r3
 822 002c 03FB0511 		mla	r1, r3, r5, r1
 823 0030 D317     		asrs	r3, r2, #31
 824 0032 FFF7FEFF 		bl	__aeabi_ldivmod
 825              	.LVL61:
 806:.\Generated_Source\PSoC5/ADC.c **** 
 807:.\Generated_Source\PSoC5/ADC.c ****     return( uVolts );
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 31


 808:.\Generated_Source\PSoC5/ADC.c **** }
 826              		.loc 1 808 0
 827 0036 38BD     		pop	{r3, r4, r5, pc}
 828              	.L75:
 829              		.align	2
 830              	.L74:
 831 0038 00000000 		.word	ADC_countsPerVolt
 832 003c 00000000 		.word	ADC_countsPer10Volt
 833 0040 00000000 		.word	ADC_offset
 834 0044 80969800 		.word	10000000
 835              		.cfi_endproc
 836              	.LFE16:
 837              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 838              		.global	__aeabi_i2f
 839              		.global	__aeabi_fmul
 840              		.global	__aeabi_fdiv
 841              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 842              		.align	2
 843              		.global	ADC_CountsTo_Volts
 844              		.thumb
 845              		.thumb_func
 846              		.type	ADC_CountsTo_Volts, %function
 847              	ADC_CountsTo_Volts:
 848              	.LFB17:
 809:.\Generated_Source\PSoC5/ADC.c **** 
 810:.\Generated_Source\PSoC5/ADC.c **** 
 811:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 812:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_CountsTo_Volts
 813:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 814:.\Generated_Source\PSoC5/ADC.c **** *
 815:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 816:.\Generated_Source\PSoC5/ADC.c **** *  Converts the ADC output to volts as a floating-point number.
 817:.\Generated_Source\PSoC5/ADC.c **** *
 818:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 819:.\Generated_Source\PSoC5/ADC.c **** *  int16 adcCounts: Result from the ADC conversion
 820:.\Generated_Source\PSoC5/ADC.c **** *
 821:.\Generated_Source\PSoC5/ADC.c **** * Return:
 822:.\Generated_Source\PSoC5/ADC.c **** *  float Result in Volts
 823:.\Generated_Source\PSoC5/ADC.c **** *
 824:.\Generated_Source\PSoC5/ADC.c **** * Global Variables:
 825:.\Generated_Source\PSoC5/ADC.c **** *  ADC_offset variable used.
 826:.\Generated_Source\PSoC5/ADC.c **** *  ADC_countsPer10Volt used to convert ADC counts to Volts.
 827:.\Generated_Source\PSoC5/ADC.c **** *
 828:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 829:.\Generated_Source\PSoC5/ADC.c **** float32 ADC_CountsTo_Volts(int16 adcCounts)
 830:.\Generated_Source\PSoC5/ADC.c **** {
 849              		.loc 1 830 0
 850              		.cfi_startproc
 851              		@ args = 0, pretend = 0, frame = 0
 852              		@ frame_needed = 0, uses_anonymous_args = 0
 853              	.LVL62:
 854 0000 38B5     		push	{r3, r4, r5, lr}
 855              		.cfi_def_cfa_offset 16
 856              		.cfi_offset 3, -16
 857              		.cfi_offset 4, -12
 858              		.cfi_offset 5, -8
 859              		.cfi_offset 14, -4
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 32


 831:.\Generated_Source\PSoC5/ADC.c ****     float32 volts;
 832:.\Generated_Source\PSoC5/ADC.c ****     int32 countsPer10Volt;
 833:.\Generated_Source\PSoC5/ADC.c **** 
 834:.\Generated_Source\PSoC5/ADC.c ****     if(ADC_countsPerVolt != 0)
 860              		.loc 1 834 0
 861 0002 0F4B     		ldr	r3, .L79
 862 0004 1B88     		ldrh	r3, [r3]
 863 0006 9BB2     		uxth	r3, r3
 864 0008 33B1     		cbz	r3, .L77
 835:.\Generated_Source\PSoC5/ADC.c ****     {   /* Support obsolete method */
 836:.\Generated_Source\PSoC5/ADC.c ****         countsPer10Volt = (int32)ADC_countsPerVolt * 10;
 865              		.loc 1 836 0
 866 000a 0D4B     		ldr	r3, .L79
 867 000c 1D88     		ldrh	r5, [r3]
 868 000e 2DB2     		sxth	r5, r5
 869 0010 05EB8505 		add	r5, r5, r5, lsl #2
 870 0014 6D00     		lsls	r5, r5, #1
 871              	.LVL63:
 872 0016 01E0     		b	.L78
 873              	.LVL64:
 874              	.L77:
 837:.\Generated_Source\PSoC5/ADC.c ****     }
 838:.\Generated_Source\PSoC5/ADC.c ****     else
 839:.\Generated_Source\PSoC5/ADC.c ****     {
 840:.\Generated_Source\PSoC5/ADC.c ****         countsPer10Volt = ADC_countsPer10Volt;
 875              		.loc 1 840 0
 876 0018 0A4B     		ldr	r3, .L79+4
 877 001a 1D68     		ldr	r5, [r3]
 878              	.LVL65:
 879              	.L78:
 841:.\Generated_Source\PSoC5/ADC.c ****     }
 842:.\Generated_Source\PSoC5/ADC.c **** 
 843:.\Generated_Source\PSoC5/ADC.c ****     /* Subtract ADC offset */
 844:.\Generated_Source\PSoC5/ADC.c ****     adcCounts -= ADC_offset;
 880              		.loc 1 844 0
 881 001c 0A4B     		ldr	r3, .L79+8
 882 001e 1B88     		ldrh	r3, [r3]
 883 0020 C01A     		subs	r0, r0, r3
 884              	.LVL66:
 845:.\Generated_Source\PSoC5/ADC.c **** 
 846:.\Generated_Source\PSoC5/ADC.c ****     volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)countsPer10Volt;
 885              		.loc 1 846 0
 886 0022 00B2     		sxth	r0, r0
 887              	.LVL67:
 888 0024 FFF7FEFF 		bl	__aeabi_i2f
 889              	.LVL68:
 890 0028 0849     		ldr	r1, .L79+12
 891 002a FFF7FEFF 		bl	__aeabi_fmul
 892              	.LVL69:
 893 002e 0446     		mov	r4, r0
 894 0030 2846     		mov	r0, r5
 895 0032 FFF7FEFF 		bl	__aeabi_i2f
 896              	.LVL70:
 897 0036 0146     		mov	r1, r0
 898 0038 2046     		mov	r0, r4
 899 003a FFF7FEFF 		bl	__aeabi_fdiv
 900              	.LVL71:
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 33


 847:.\Generated_Source\PSoC5/ADC.c **** 
 848:.\Generated_Source\PSoC5/ADC.c ****     return( volts );
 849:.\Generated_Source\PSoC5/ADC.c **** }
 901              		.loc 1 849 0
 902 003e 38BD     		pop	{r3, r4, r5, pc}
 903              	.LVL72:
 904              	.L80:
 905              		.align	2
 906              	.L79:
 907 0040 00000000 		.word	ADC_countsPerVolt
 908 0044 00000000 		.word	ADC_countsPer10Volt
 909 0048 00000000 		.word	ADC_offset
 910 004c 00002041 		.word	1092616192
 911              		.cfi_endproc
 912              	.LFE17:
 913              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 914              		.comm	ADC_shift,2,2
 915              		.comm	ADC_countsPer10Volt,4,4
 916              		.comm	ADC_countsPerVolt,2,2
 917              		.comm	ADC_offset,2,2
 918              		.global	ADC_initVar
 919              		.bss
 920              		.set	.LANCHOR0,. + 0
 921              		.type	ADC_initVar, %object
 922              		.size	ADC_initVar, 1
 923              	ADC_initVar:
 924 0000 00       		.space	1
 925              		.text
 926              	.Letext0:
 927              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 928              		.file 3 ".\\Generated_Source\\PSoC5\\CyLib.h"
 929              		.file 4 ".\\Generated_Source\\PSoC5\\ADC_theACLK.h"
 930              		.section	.debug_info,"",%progbits
 931              	.Ldebug_info0:
 932 0000 F0050000 		.4byte	0x5f0
 933 0004 0400     		.2byte	0x4
 934 0006 00000000 		.4byte	.Ldebug_abbrev0
 935 000a 04       		.byte	0x4
 936 000b 01       		.uleb128 0x1
 937 000c 25000000 		.4byte	.LASF65
 938 0010 01       		.byte	0x1
 939 0011 0D010000 		.4byte	.LASF66
 940 0015 97020000 		.4byte	.LASF67
 941 0019 00000000 		.4byte	.Ldebug_ranges0+0
 942 001d 00000000 		.4byte	0
 943 0021 00000000 		.4byte	.Ldebug_line0
 944 0025 02       		.uleb128 0x2
 945 0026 04       		.byte	0x4
 946 0027 05       		.byte	0x5
 947 0028 696E7400 		.ascii	"int\000"
 948 002c 03       		.uleb128 0x3
 949 002d 04       		.byte	0x4
 950 002e 07       		.byte	0x7
 951 002f E3010000 		.4byte	.LASF0
 952 0033 03       		.uleb128 0x3
 953 0034 01       		.byte	0x1
 954 0035 06       		.byte	0x6
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 34


 955 0036 FA000000 		.4byte	.LASF1
 956 003a 03       		.uleb128 0x3
 957 003b 01       		.byte	0x1
 958 003c 08       		.byte	0x8
 959 003d 64030000 		.4byte	.LASF2
 960 0041 03       		.uleb128 0x3
 961 0042 02       		.byte	0x2
 962 0043 05       		.byte	0x5
 963 0044 7D030000 		.4byte	.LASF3
 964 0048 03       		.uleb128 0x3
 965 0049 02       		.byte	0x2
 966 004a 07       		.byte	0x7
 967 004b 26020000 		.4byte	.LASF4
 968 004f 03       		.uleb128 0x3
 969 0050 04       		.byte	0x4
 970 0051 05       		.byte	0x5
 971 0052 3C010000 		.4byte	.LASF5
 972 0056 03       		.uleb128 0x3
 973 0057 04       		.byte	0x4
 974 0058 07       		.byte	0x7
 975 0059 F7010000 		.4byte	.LASF6
 976 005d 03       		.uleb128 0x3
 977 005e 08       		.byte	0x8
 978 005f 05       		.byte	0x5
 979 0060 EC000000 		.4byte	.LASF7
 980 0064 03       		.uleb128 0x3
 981 0065 08       		.byte	0x8
 982 0066 07       		.byte	0x7
 983 0067 C4000000 		.4byte	.LASF8
 984 006b 03       		.uleb128 0x3
 985 006c 04       		.byte	0x4
 986 006d 07       		.byte	0x7
 987 006e 7A020000 		.4byte	.LASF9
 988 0072 04       		.uleb128 0x4
 989 0073 04       		.byte	0x4
 990 0074 78000000 		.4byte	0x78
 991 0078 05       		.uleb128 0x5
 992 0079 03       		.uleb128 0x3
 993 007a 01       		.byte	0x1
 994 007b 08       		.byte	0x8
 995 007c AD030000 		.4byte	.LASF10
 996 0080 06       		.uleb128 0x6
 997 0081 85010000 		.4byte	.LASF11
 998 0085 02       		.byte	0x2
 999 0086 B4       		.byte	0xb4
 1000 0087 3A000000 		.4byte	0x3a
 1001 008b 06       		.uleb128 0x6
 1002 008c 00000000 		.4byte	.LASF12
 1003 0090 02       		.byte	0x2
 1004 0091 B5       		.byte	0xb5
 1005 0092 48000000 		.4byte	0x48
 1006 0096 06       		.uleb128 0x6
 1007 0097 9C010000 		.4byte	.LASF13
 1008 009b 02       		.byte	0x2
 1009 009c B6       		.byte	0xb6
 1010 009d 56000000 		.4byte	0x56
 1011 00a1 06       		.uleb128 0x6
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 35


 1012 00a2 39020000 		.4byte	.LASF14
 1013 00a6 02       		.byte	0x2
 1014 00a7 B7       		.byte	0xb7
 1015 00a8 33000000 		.4byte	0x33
 1016 00ac 06       		.uleb128 0x6
 1017 00ad EC030000 		.4byte	.LASF15
 1018 00b1 02       		.byte	0x2
 1019 00b2 B8       		.byte	0xb8
 1020 00b3 41000000 		.4byte	0x41
 1021 00b7 06       		.uleb128 0x6
 1022 00b8 2C010000 		.4byte	.LASF16
 1023 00bc 02       		.byte	0x2
 1024 00bd B9       		.byte	0xb9
 1025 00be 4F000000 		.4byte	0x4f
 1026 00c2 06       		.uleb128 0x6
 1027 00c3 72020000 		.4byte	.LASF17
 1028 00c7 02       		.byte	0x2
 1029 00c8 BA       		.byte	0xba
 1030 00c9 CD000000 		.4byte	0xcd
 1031 00cd 03       		.uleb128 0x3
 1032 00ce 04       		.byte	0x4
 1033 00cf 04       		.byte	0x4
 1034 00d0 38030000 		.4byte	.LASF18
 1035 00d4 03       		.uleb128 0x3
 1036 00d5 08       		.byte	0x8
 1037 00d6 04       		.byte	0x4
 1038 00d7 95010000 		.4byte	.LASF19
 1039 00db 06       		.uleb128 0x6
 1040 00dc 15030000 		.4byte	.LASF20
 1041 00e0 02       		.byte	0x2
 1042 00e1 BF       		.byte	0xbf
 1043 00e2 5D000000 		.4byte	0x5d
 1044 00e6 07       		.uleb128 0x7
 1045 00e7 58030000 		.4byte	.LASF21
 1046 00eb 02       		.byte	0x2
 1047 00ec 5E01     		.2byte	0x15e
 1048 00ee F2000000 		.4byte	0xf2
 1049 00f2 08       		.uleb128 0x8
 1050 00f3 80000000 		.4byte	0x80
 1051 00f7 07       		.uleb128 0x7
 1052 00f8 7F010000 		.4byte	.LASF22
 1053 00fc 02       		.byte	0x2
 1054 00fd 5F01     		.2byte	0x15f
 1055 00ff 03010000 		.4byte	0x103
 1056 0103 08       		.uleb128 0x8
 1057 0104 8B000000 		.4byte	0x8b
 1058 0108 07       		.uleb128 0x7
 1059 0109 62020000 		.4byte	.LASF23
 1060 010d 02       		.byte	0x2
 1061 010e 6001     		.2byte	0x160
 1062 0110 14010000 		.4byte	0x114
 1063 0114 08       		.uleb128 0x8
 1064 0115 96000000 		.4byte	0x96
 1065 0119 07       		.uleb128 0x7
 1066 011a B2030000 		.4byte	.LASF24
 1067 011e 02       		.byte	0x2
 1068 011f 7001     		.2byte	0x170
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 36


 1069 0121 72000000 		.4byte	0x72
 1070 0125 09       		.uleb128 0x9
 1071 0126 4E020000 		.4byte	.LASF68
 1072 012a 01       		.byte	0x1
 1073 012b 6302     		.2byte	0x263
 1074 012d 00000000 		.4byte	.LFB12
 1075 0131 5C000000 		.4byte	.LFE12-.LFB12
 1076 0135 01       		.uleb128 0x1
 1077 0136 9C       		.byte	0x9c
 1078 0137 6B010000 		.4byte	0x16b
 1079 013b 0A       		.uleb128 0xa
 1080 013c 90030000 		.4byte	.LASF31
 1081 0140 01       		.byte	0x1
 1082 0141 6302     		.2byte	0x263
 1083 0143 80000000 		.4byte	0x80
 1084 0147 00000000 		.4byte	.LLST0
 1085 014b 0B       		.uleb128 0xb
 1086 014c A1000000 		.4byte	.LASF25
 1087 0150 01       		.byte	0x1
 1088 0151 6502     		.2byte	0x265
 1089 0153 B7000000 		.4byte	0xb7
 1090 0157 3A000000 		.4byte	.LLST1
 1091 015b 0C       		.uleb128 0xc
 1092 015c 22000000 		.4byte	.LVL4
 1093 0160 78050000 		.4byte	0x578
 1094 0164 0D       		.uleb128 0xd
 1095 0165 01       		.uleb128 0x1
 1096 0166 50       		.byte	0x50
 1097 0167 01       		.uleb128 0x1
 1098 0168 30       		.byte	0x30
 1099 0169 00       		.byte	0
 1100 016a 00       		.byte	0
 1101 016b 0E       		.uleb128 0xe
 1102 016c E1030000 		.4byte	.LASF28
 1103 0170 01       		.byte	0x1
 1104 0171 8F       		.byte	0x8f
 1105 0172 00000000 		.4byte	.LFB2
 1106 0176 90000000 		.4byte	.LFE2-.LFB2
 1107 017a 01       		.uleb128 0x1
 1108 017b 9C       		.byte	0x9c
 1109 017c CB010000 		.4byte	0x1cb
 1110 0180 0F       		.uleb128 0xf
 1111 0181 00040000 		.4byte	.LASF26
 1112 0185 01       		.byte	0x1
 1113 0186 91       		.byte	0x91
 1114 0187 80000000 		.4byte	0x80
 1115 018b 67000000 		.4byte	.LLST2
 1116 018f 0F       		.uleb128 0xf
 1117 0190 D0030000 		.4byte	.LASF27
 1118 0194 01       		.byte	0x1
 1119 0195 92       		.byte	0x92
 1120 0196 80000000 		.4byte	0x80
 1121 019a 89000000 		.4byte	.LLST3
 1122 019e 10       		.uleb128 0x10
 1123 019f 06000000 		.4byte	.LVL8
 1124 01a3 89050000 		.4byte	0x589
 1125 01a7 11       		.uleb128 0x11
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 37


 1126 01a8 7A000000 		.4byte	.LVL14
 1127 01ac 94050000 		.4byte	0x594
 1128 01b0 BA010000 		.4byte	0x1ba
 1129 01b4 0D       		.uleb128 0xd
 1130 01b5 01       		.uleb128 0x1
 1131 01b6 50       		.byte	0x50
 1132 01b7 01       		.uleb128 0x1
 1133 01b8 3A       		.byte	0x3a
 1134 01b9 00       		.byte	0
 1135 01ba 0C       		.uleb128 0xc
 1136 01bb 86000000 		.4byte	.LVL15
 1137 01bf A5050000 		.4byte	0x5a5
 1138 01c3 0D       		.uleb128 0xd
 1139 01c4 01       		.uleb128 0x1
 1140 01c5 50       		.byte	0x50
 1141 01c6 02       		.uleb128 0x2
 1142 01c7 74       		.byte	0x74
 1143 01c8 00       		.sleb128 0
 1144 01c9 00       		.byte	0
 1145 01ca 00       		.byte	0
 1146 01cb 0E       		.uleb128 0xe
 1147 01cc 87030000 		.4byte	.LASF29
 1148 01d0 01       		.byte	0x1
 1149 01d1 F8       		.byte	0xf8
 1150 01d2 00000000 		.4byte	.LFB3
 1151 01d6 48000000 		.4byte	.LFE3-.LFB3
 1152 01da 01       		.uleb128 0x1
 1153 01db 9C       		.byte	0x9c
 1154 01dc 02020000 		.4byte	0x202
 1155 01e0 0F       		.uleb128 0xf
 1156 01e1 D0030000 		.4byte	.LASF27
 1157 01e5 01       		.byte	0x1
 1158 01e6 FA       		.byte	0xfa
 1159 01e7 80000000 		.4byte	0x80
 1160 01eb A7000000 		.4byte	.LLST4
 1161 01ef 10       		.uleb128 0x10
 1162 01f0 06000000 		.4byte	.LVL17
 1163 01f4 89050000 		.4byte	0x589
 1164 01f8 10       		.uleb128 0x10
 1165 01f9 40000000 		.4byte	.LVL18
 1166 01fd A5050000 		.4byte	0x5a5
 1167 0201 00       		.byte	0
 1168 0202 12       		.uleb128 0x12
 1169 0203 CE010000 		.4byte	.LASF30
 1170 0207 01       		.byte	0x1
 1171 0208 2201     		.2byte	0x122
 1172 020a 00000000 		.4byte	.LFB4
 1173 020e 18000000 		.4byte	.LFE4-.LFB4
 1174 0212 01       		.uleb128 0x1
 1175 0213 9C       		.byte	0x9c
 1176 0214 39020000 		.4byte	0x239
 1177 0218 0A       		.uleb128 0xa
 1178 0219 52030000 		.4byte	.LASF32
 1179 021d 01       		.byte	0x1
 1180 021e 2201     		.2byte	0x122
 1181 0220 80000000 		.4byte	0x80
 1182 0224 BA000000 		.4byte	.LLST5
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 38


 1183 0228 0B       		.uleb128 0xb
 1184 0229 00040000 		.4byte	.LASF26
 1185 022d 01       		.byte	0x1
 1186 022e 2401     		.2byte	0x124
 1187 0230 80000000 		.4byte	0x80
 1188 0234 D8000000 		.4byte	.LLST6
 1189 0238 00       		.byte	0
 1190 0239 12       		.uleb128 0x12
 1191 023a 03030000 		.4byte	.LASF33
 1192 023e 01       		.byte	0x1
 1193 023f 5401     		.2byte	0x154
 1194 0241 00000000 		.4byte	.LFB5
 1195 0245 38000000 		.4byte	.LFE5-.LFB5
 1196 0249 01       		.uleb128 0x1
 1197 024a 9C       		.byte	0x9c
 1198 024b 93020000 		.4byte	0x293
 1199 024f 0A       		.uleb128 0xa
 1200 0250 90030000 		.4byte	.LASF31
 1201 0254 01       		.byte	0x1
 1202 0255 5401     		.2byte	0x154
 1203 0257 80000000 		.4byte	0x80
 1204 025b F6000000 		.4byte	.LLST7
 1205 025f 0B       		.uleb128 0xb
 1206 0260 00040000 		.4byte	.LASF26
 1207 0264 01       		.byte	0x1
 1208 0265 5601     		.2byte	0x156
 1209 0267 80000000 		.4byte	0x80
 1210 026b 30010000 		.4byte	.LLST8
 1211 026f 11       		.uleb128 0x11
 1212 0270 20000000 		.4byte	.LVL27
 1213 0274 78050000 		.4byte	0x578
 1214 0278 82020000 		.4byte	0x282
 1215 027c 0D       		.uleb128 0xd
 1216 027d 01       		.uleb128 0x1
 1217 027e 50       		.byte	0x50
 1218 027f 01       		.uleb128 0x1
 1219 0280 30       		.byte	0x30
 1220 0281 00       		.byte	0
 1221 0282 0C       		.uleb128 0xc
 1222 0283 30000000 		.4byte	.LVL30
 1223 0287 25010000 		.4byte	0x125
 1224 028b 0D       		.uleb128 0xd
 1225 028c 01       		.uleb128 0x1
 1226 028d 50       		.byte	0x50
 1227 028e 02       		.uleb128 0x2
 1228 028f 74       		.byte	0x74
 1229 0290 00       		.sleb128 0
 1230 0291 00       		.byte	0
 1231 0292 00       		.byte	0
 1232 0293 0E       		.uleb128 0xe
 1233 0294 BB000000 		.4byte	.LASF34
 1234 0298 01       		.byte	0x1
 1235 0299 6A       		.byte	0x6a
 1236 029a 00000000 		.4byte	.LFB1
 1237 029e 3C000000 		.4byte	.LFE1-.LFB1
 1238 02a2 01       		.uleb128 0x1
 1239 02a3 9C       		.byte	0x9c
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 39


 1240 02a4 F6020000 		.4byte	0x2f6
 1241 02a8 11       		.uleb128 0x11
 1242 02a9 08000000 		.4byte	.LVL31
 1243 02ad B6050000 		.4byte	0x5b6
 1244 02b1 BB020000 		.4byte	0x2bb
 1245 02b5 0D       		.uleb128 0xd
 1246 02b6 01       		.uleb128 0x1
 1247 02b7 50       		.byte	0x50
 1248 02b8 01       		.uleb128 0x1
 1249 02b9 40       		.byte	0x40
 1250 02ba 00       		.byte	0
 1251 02bb 11       		.uleb128 0x11
 1252 02bc 10000000 		.4byte	.LVL32
 1253 02c0 C7050000 		.4byte	0x5c7
 1254 02c4 D3020000 		.4byte	0x2d3
 1255 02c8 0D       		.uleb128 0xd
 1256 02c9 01       		.uleb128 0x1
 1257 02ca 51       		.byte	0x51
 1258 02cb 01       		.uleb128 0x1
 1259 02cc 37       		.byte	0x37
 1260 02cd 0D       		.uleb128 0xd
 1261 02ce 01       		.uleb128 0x1
 1262 02cf 50       		.byte	0x50
 1263 02d0 01       		.uleb128 0x1
 1264 02d1 30       		.byte	0x30
 1265 02d2 00       		.byte	0
 1266 02d3 11       		.uleb128 0x11
 1267 02d4 18000000 		.4byte	.LVL33
 1268 02d8 DD050000 		.4byte	0x5dd
 1269 02dc E6020000 		.4byte	0x2e6
 1270 02e0 0D       		.uleb128 0xd
 1271 02e1 01       		.uleb128 0x1
 1272 02e2 50       		.byte	0x50
 1273 02e3 01       		.uleb128 0x1
 1274 02e4 30       		.byte	0x30
 1275 02e5 00       		.byte	0
 1276 02e6 0C       		.uleb128 0xc
 1277 02e7 28000000 		.4byte	.LVL34
 1278 02eb 39020000 		.4byte	0x239
 1279 02ef 0D       		.uleb128 0xd
 1280 02f0 01       		.uleb128 0x1
 1281 02f1 50       		.byte	0x50
 1282 02f2 01       		.uleb128 0x1
 1283 02f3 3C       		.byte	0x3c
 1284 02f4 00       		.byte	0
 1285 02f5 00       		.byte	0
 1286 02f6 0E       		.uleb128 0xe
 1287 02f7 32010000 		.4byte	.LASF35
 1288 02fb 01       		.byte	0x1
 1289 02fc 4A       		.byte	0x4a
 1290 02fd 00000000 		.4byte	.LFB0
 1291 0301 1C000000 		.4byte	.LFE0-.LFB0
 1292 0305 01       		.uleb128 0x1
 1293 0306 9C       		.byte	0x9c
 1294 0307 1E030000 		.4byte	0x31e
 1295 030b 10       		.uleb128 0x10
 1296 030c 0C000000 		.4byte	.LVL35
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 40


 1297 0310 93020000 		.4byte	0x293
 1298 0314 10       		.uleb128 0x10
 1299 0315 16000000 		.4byte	.LVL36
 1300 0319 6B010000 		.4byte	0x16b
 1301 031d 00       		.byte	0
 1302 031e 13       		.uleb128 0x13
 1303 031f DB000000 		.4byte	.LASF36
 1304 0323 01       		.byte	0x1
 1305 0324 9101     		.2byte	0x191
 1306 0326 00000000 		.4byte	.LFB6
 1307 032a 10000000 		.4byte	.LFE6-.LFB6
 1308 032e 01       		.uleb128 0x1
 1309 032f 9C       		.byte	0x9c
 1310 0330 13       		.uleb128 0x13
 1311 0331 3E020000 		.4byte	.LASF37
 1312 0335 01       		.byte	0x1
 1313 0336 B301     		.2byte	0x1b3
 1314 0338 00000000 		.4byte	.LFB7
 1315 033c 10000000 		.4byte	.LFE7-.LFB7
 1316 0340 01       		.uleb128 0x1
 1317 0341 9C       		.byte	0x9c
 1318 0342 14       		.uleb128 0x14
 1319 0343 83020000 		.4byte	.LASF40
 1320 0347 01       		.byte	0x1
 1321 0348 DB01     		.2byte	0x1db
 1322 034a 80000000 		.4byte	0x80
 1323 034e 00000000 		.4byte	.LFB8
 1324 0352 24000000 		.4byte	.LFE8-.LFB8
 1325 0356 01       		.uleb128 0x1
 1326 0357 9C       		.byte	0x9c
 1327 0358 8C030000 		.4byte	0x38c
 1328 035c 0A       		.uleb128 0xa
 1329 035d DB010000 		.4byte	.LASF38
 1330 0361 01       		.byte	0x1
 1331 0362 DB01     		.2byte	0x1db
 1332 0364 80000000 		.4byte	0x80
 1333 0368 5D010000 		.4byte	.LLST9
 1334 036c 0B       		.uleb128 0xb
 1335 036d 06010000 		.4byte	.LASF39
 1336 0371 01       		.byte	0x1
 1337 0372 DD01     		.2byte	0x1dd
 1338 0374 80000000 		.4byte	0x80
 1339 0378 7E010000 		.4byte	.LLST10
 1340 037c 0C       		.uleb128 0xc
 1341 037d 18000000 		.4byte	.LVL40
 1342 0381 94050000 		.4byte	0x594
 1343 0385 0D       		.uleb128 0xd
 1344 0386 01       		.uleb128 0x1
 1345 0387 50       		.byte	0x50
 1346 0388 01       		.uleb128 0x1
 1347 0389 31       		.byte	0x31
 1348 038a 00       		.byte	0
 1349 038b 00       		.byte	0
 1350 038c 15       		.uleb128 0x15
 1351 038d D8020000 		.4byte	.LASF69
 1352 0391 01       		.byte	0x1
 1353 0392 0802     		.2byte	0x208
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 41


 1354 0394 A1000000 		.4byte	0xa1
 1355 0398 00000000 		.4byte	.LFB9
 1356 039c 18000000 		.4byte	.LFE9-.LFB9
 1357 03a0 01       		.uleb128 0x1
 1358 03a1 9C       		.byte	0x9c
 1359 03a2 14       		.uleb128 0x14
 1360 03a3 07040000 		.4byte	.LASF41
 1361 03a7 01       		.byte	0x1
 1362 03a8 2602     		.2byte	0x226
 1363 03aa AC000000 		.4byte	0xac
 1364 03ae 00000000 		.4byte	.LFB10
 1365 03b2 18000000 		.4byte	.LFE10-.LFB10
 1366 03b6 01       		.uleb128 0x1
 1367 03b7 9C       		.byte	0x9c
 1368 03b8 CD030000 		.4byte	0x3cd
 1369 03bc 16       		.uleb128 0x16
 1370 03bd 72657300 		.ascii	"res\000"
 1371 03c1 01       		.byte	0x1
 1372 03c2 2802     		.2byte	0x228
 1373 03c4 8B000000 		.4byte	0x8b
 1374 03c8 95010000 		.4byte	.LLST11
 1375 03cc 00       		.byte	0
 1376 03cd 12       		.uleb128 0x12
 1377 03ce F2030000 		.4byte	.LASF42
 1378 03d2 01       		.byte	0x1
 1379 03d3 4902     		.2byte	0x249
 1380 03d5 00000000 		.4byte	.LFB11
 1381 03d9 0C000000 		.4byte	.LFE11-.LFB11
 1382 03dd 01       		.uleb128 0x1
 1383 03de 9C       		.byte	0x9c
 1384 03df F2030000 		.4byte	0x3f2
 1385 03e3 17       		.uleb128 0x17
 1386 03e4 BF030000 		.4byte	.LASF43
 1387 03e8 01       		.byte	0x1
 1388 03e9 4902     		.2byte	0x249
 1389 03eb AC000000 		.4byte	0xac
 1390 03ef 01       		.uleb128 0x1
 1391 03f0 50       		.byte	0x50
 1392 03f1 00       		.byte	0
 1393 03f2 12       		.uleb128 0x12
 1394 03f3 2C030000 		.4byte	.LASF44
 1395 03f7 01       		.byte	0x1
 1396 03f8 B402     		.2byte	0x2b4
 1397 03fa 00000000 		.4byte	.LFB13
 1398 03fe 10000000 		.4byte	.LFE13-.LFB13
 1399 0402 01       		.uleb128 0x1
 1400 0403 9C       		.byte	0x9c
 1401 0404 19040000 		.4byte	0x419
 1402 0408 0A       		.uleb128 0xa
 1403 0409 07000000 		.4byte	.LASF45
 1404 040d 01       		.byte	0x1
 1405 040e B402     		.2byte	0x2b4
 1406 0410 AC000000 		.4byte	0xac
 1407 0414 A8010000 		.4byte	.LLST12
 1408 0418 00       		.byte	0
 1409 0419 12       		.uleb128 0x12
 1410 041a 9B030000 		.4byte	.LASF46
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 42


 1411 041e 01       		.byte	0x1
 1412 041f CF02     		.2byte	0x2cf
 1413 0421 00000000 		.4byte	.LFB14
 1414 0425 0C000000 		.4byte	.LFE14-.LFB14
 1415 0429 01       		.uleb128 0x1
 1416 042a 9C       		.byte	0x9c
 1417 042b 3E040000 		.4byte	0x43e
 1418 042f 17       		.uleb128 0x17
 1419 0430 07000000 		.4byte	.LASF45
 1420 0434 01       		.byte	0x1
 1421 0435 CF02     		.2byte	0x2cf
 1422 0437 B7000000 		.4byte	0xb7
 1423 043b 01       		.uleb128 0x1
 1424 043c 50       		.byte	0x50
 1425 043d 00       		.byte	0
 1426 043e 14       		.uleb128 0x14
 1427 043f 3E030000 		.4byte	.LASF47
 1428 0443 01       		.byte	0x1
 1429 0444 E702     		.2byte	0x2e7
 1430 0446 AC000000 		.4byte	0xac
 1431 044a 00000000 		.4byte	.LFB15
 1432 044e 54000000 		.4byte	.LFE15-.LFB15
 1433 0452 01       		.uleb128 0x1
 1434 0453 9C       		.byte	0x9c
 1435 0454 89040000 		.4byte	0x489
 1436 0458 0A       		.uleb128 0xa
 1437 0459 C6030000 		.4byte	.LASF48
 1438 045d 01       		.byte	0x1
 1439 045e E702     		.2byte	0x2e7
 1440 0460 AC000000 		.4byte	0xac
 1441 0464 C9010000 		.4byte	.LLST13
 1442 0468 0B       		.uleb128 0xb
 1443 0469 5B020000 		.4byte	.LASF49
 1444 046d 01       		.byte	0x1
 1445 046e E902     		.2byte	0x2e9
 1446 0470 AC000000 		.4byte	0xac
 1447 0474 F5010000 		.4byte	.LLST14
 1448 0478 0B       		.uleb128 0xb
 1449 0479 A3010000 		.4byte	.LASF50
 1450 047d 01       		.byte	0x1
 1451 047e EA02     		.2byte	0x2ea
 1452 0480 B7000000 		.4byte	0xb7
 1453 0484 18020000 		.4byte	.LLST15
 1454 0488 00       		.byte	0
 1455 0489 18       		.uleb128 0x18
 1456 048a 45010000 		.4byte	.LASF51
 1457 048e 01       		.byte	0x1
 1458 048f 1103     		.2byte	0x311
 1459 0491 B7000000 		.4byte	0xb7
 1460 0495 00000000 		.4byte	.LFB16
 1461 0499 48000000 		.4byte	.LFE16-.LFB16
 1462 049d 01       		.uleb128 0x1
 1463 049e 9C       		.byte	0x9c
 1464 049f D0040000 		.4byte	0x4d0
 1465 04a3 0A       		.uleb128 0xa
 1466 04a4 C6030000 		.4byte	.LASF48
 1467 04a8 01       		.byte	0x1
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 43


 1468 04a9 1103     		.2byte	0x311
 1469 04ab AC000000 		.4byte	0xac
 1470 04af 36020000 		.4byte	.LLST16
 1471 04b3 19       		.uleb128 0x19
 1472 04b4 F0010000 		.4byte	.LASF70
 1473 04b8 01       		.byte	0x1
 1474 04b9 1403     		.2byte	0x314
 1475 04bb DB000000 		.4byte	0xdb
 1476 04bf 0B       		.uleb128 0xb
 1477 04c0 A3010000 		.4byte	.LASF50
 1478 04c4 01       		.byte	0x1
 1479 04c5 1503     		.2byte	0x315
 1480 04c7 B7000000 		.4byte	0xb7
 1481 04cb 59020000 		.4byte	.LLST17
 1482 04cf 00       		.byte	0
 1483 04d0 18       		.uleb128 0x18
 1484 04d1 A8000000 		.4byte	.LASF52
 1485 04d5 01       		.byte	0x1
 1486 04d6 3D03     		.2byte	0x33d
 1487 04d8 C2000000 		.4byte	0xc2
 1488 04dc 00000000 		.4byte	.LFB17
 1489 04e0 50000000 		.4byte	.LFE17-.LFB17
 1490 04e4 01       		.uleb128 0x1
 1491 04e5 9C       		.byte	0x9c
 1492 04e6 19050000 		.4byte	0x519
 1493 04ea 0A       		.uleb128 0xa
 1494 04eb C6030000 		.4byte	.LASF48
 1495 04ef 01       		.byte	0x1
 1496 04f0 3D03     		.2byte	0x33d
 1497 04f2 AC000000 		.4byte	0xac
 1498 04f6 77020000 		.4byte	.LLST18
 1499 04fa 1A       		.uleb128 0x1a
 1500 04fb 09020000 		.4byte	.LASF53
 1501 04ff 01       		.byte	0x1
 1502 0500 3F03     		.2byte	0x33f
 1503 0502 C2000000 		.4byte	0xc2
 1504 0506 01       		.uleb128 0x1
 1505 0507 50       		.byte	0x50
 1506 0508 0B       		.uleb128 0xb
 1507 0509 A3010000 		.4byte	.LASF50
 1508 050d 01       		.byte	0x1
 1509 050e 4003     		.2byte	0x340
 1510 0510 B7000000 		.4byte	0xb7
 1511 0514 95020000 		.4byte	.LLST19
 1512 0518 00       		.byte	0
 1513 0519 1B       		.uleb128 0x1b
 1514 051a C2010000 		.4byte	.LASF54
 1515 051e 01       		.byte	0x1
 1516 051f 23       		.byte	0x23
 1517 0520 80000000 		.4byte	0x80
 1518 0524 05       		.uleb128 0x5
 1519 0525 03       		.byte	0x3
 1520 0526 00000000 		.4byte	ADC_initVar
 1521 052a 1B       		.uleb128 0x1b
 1522 052b 72030000 		.4byte	.LASF55
 1523 052f 01       		.byte	0x1
 1524 0530 24       		.byte	0x24
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 44


 1525 0531 3B050000 		.4byte	0x53b
 1526 0535 05       		.uleb128 0x5
 1527 0536 03       		.byte	0x3
 1528 0537 00000000 		.4byte	ADC_offset
 1529 053b 08       		.uleb128 0x8
 1530 053c AC000000 		.4byte	0xac
 1531 0540 1B       		.uleb128 0x1b
 1532 0541 6D010000 		.4byte	.LASF56
 1533 0545 01       		.byte	0x1
 1534 0546 25       		.byte	0x25
 1535 0547 3B050000 		.4byte	0x53b
 1536 054b 05       		.uleb128 0x5
 1537 054c 03       		.byte	0x3
 1538 054d 00000000 		.4byte	ADC_countsPerVolt
 1539 0551 1B       		.uleb128 0x1b
 1540 0552 59010000 		.4byte	.LASF57
 1541 0556 01       		.byte	0x1
 1542 0557 26       		.byte	0x26
 1543 0558 62050000 		.4byte	0x562
 1544 055c 05       		.uleb128 0x5
 1545 055d 03       		.byte	0x3
 1546 055e 00000000 		.4byte	ADC_countsPer10Volt
 1547 0562 08       		.uleb128 0x8
 1548 0563 B7000000 		.4byte	0xb7
 1549 0567 1B       		.uleb128 0x1b
 1550 0568 68020000 		.4byte	.LASF58
 1551 056c 01       		.byte	0x1
 1552 056d 27       		.byte	0x27
 1553 056e 3B050000 		.4byte	0x53b
 1554 0572 05       		.uleb128 0x5
 1555 0573 03       		.byte	0x3
 1556 0574 00000000 		.4byte	ADC_shift
 1557 0578 1C       		.uleb128 0x1c
 1558 0579 5D030000 		.4byte	.LASF59
 1559 057d 03       		.byte	0x3
 1560 057e 80       		.byte	0x80
 1561 057f 89050000 		.4byte	0x589
 1562 0583 1D       		.uleb128 0x1d
 1563 0584 80000000 		.4byte	0x80
 1564 0588 00       		.byte	0
 1565 0589 1E       		.uleb128 0x1e
 1566 058a 0F020000 		.4byte	.LASF71
 1567 058e 03       		.byte	0x3
 1568 058f 7E       		.byte	0x7e
 1569 0590 80000000 		.4byte	0x80
 1570 0594 1C       		.uleb128 0x1c
 1571 0595 8B010000 		.4byte	.LASF60
 1572 0599 03       		.byte	0x3
 1573 059a 78       		.byte	0x78
 1574 059b A5050000 		.4byte	0x5a5
 1575 059f 1D       		.uleb128 0x1d
 1576 05a0 8B000000 		.4byte	0x8b
 1577 05a4 00       		.byte	0
 1578 05a5 1C       		.uleb128 0x1c
 1579 05a6 0F000000 		.4byte	.LASF61
 1580 05aa 03       		.byte	0x3
 1581 05ab 7F       		.byte	0x7f
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 45


 1582 05ac B6050000 		.4byte	0x5b6
 1583 05b0 1D       		.uleb128 0x1d
 1584 05b1 80000000 		.4byte	0x80
 1585 05b5 00       		.byte	0
 1586 05b6 1C       		.uleb128 0x1c
 1587 05b7 E7020000 		.4byte	.LASF62
 1588 05bb 04       		.byte	0x4
 1589 05bc 32       		.byte	0x32
 1590 05bd C7050000 		.4byte	0x5c7
 1591 05c1 1D       		.uleb128 0x1d
 1592 05c2 80000000 		.4byte	0x80
 1593 05c6 00       		.byte	0
 1594 05c7 1C       		.uleb128 0x1c
 1595 05c8 1B030000 		.4byte	.LASF63
 1596 05cc 03       		.byte	0x3
 1597 05cd 8C       		.byte	0x8c
 1598 05ce DD050000 		.4byte	0x5dd
 1599 05d2 1D       		.uleb128 0x1d
 1600 05d3 80000000 		.4byte	0x80
 1601 05d7 1D       		.uleb128 0x1d
 1602 05d8 80000000 		.4byte	0x80
 1603 05dc 00       		.byte	0
 1604 05dd 1F       		.uleb128 0x1f
 1605 05de B3010000 		.4byte	.LASF64
 1606 05e2 03       		.byte	0x3
 1607 05e3 89       		.byte	0x89
 1608 05e4 19010000 		.4byte	0x119
 1609 05e8 1D       		.uleb128 0x1d
 1610 05e9 80000000 		.4byte	0x80
 1611 05ed 1D       		.uleb128 0x1d
 1612 05ee 19010000 		.4byte	0x119
 1613 05f2 00       		.byte	0
 1614 05f3 00       		.byte	0
 1615              		.section	.debug_abbrev,"",%progbits
 1616              	.Ldebug_abbrev0:
 1617 0000 01       		.uleb128 0x1
 1618 0001 11       		.uleb128 0x11
 1619 0002 01       		.byte	0x1
 1620 0003 25       		.uleb128 0x25
 1621 0004 0E       		.uleb128 0xe
 1622 0005 13       		.uleb128 0x13
 1623 0006 0B       		.uleb128 0xb
 1624 0007 03       		.uleb128 0x3
 1625 0008 0E       		.uleb128 0xe
 1626 0009 1B       		.uleb128 0x1b
 1627 000a 0E       		.uleb128 0xe
 1628 000b 55       		.uleb128 0x55
 1629 000c 17       		.uleb128 0x17
 1630 000d 11       		.uleb128 0x11
 1631 000e 01       		.uleb128 0x1
 1632 000f 10       		.uleb128 0x10
 1633 0010 17       		.uleb128 0x17
 1634 0011 00       		.byte	0
 1635 0012 00       		.byte	0
 1636 0013 02       		.uleb128 0x2
 1637 0014 24       		.uleb128 0x24
 1638 0015 00       		.byte	0
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 46


 1639 0016 0B       		.uleb128 0xb
 1640 0017 0B       		.uleb128 0xb
 1641 0018 3E       		.uleb128 0x3e
 1642 0019 0B       		.uleb128 0xb
 1643 001a 03       		.uleb128 0x3
 1644 001b 08       		.uleb128 0x8
 1645 001c 00       		.byte	0
 1646 001d 00       		.byte	0
 1647 001e 03       		.uleb128 0x3
 1648 001f 24       		.uleb128 0x24
 1649 0020 00       		.byte	0
 1650 0021 0B       		.uleb128 0xb
 1651 0022 0B       		.uleb128 0xb
 1652 0023 3E       		.uleb128 0x3e
 1653 0024 0B       		.uleb128 0xb
 1654 0025 03       		.uleb128 0x3
 1655 0026 0E       		.uleb128 0xe
 1656 0027 00       		.byte	0
 1657 0028 00       		.byte	0
 1658 0029 04       		.uleb128 0x4
 1659 002a 0F       		.uleb128 0xf
 1660 002b 00       		.byte	0
 1661 002c 0B       		.uleb128 0xb
 1662 002d 0B       		.uleb128 0xb
 1663 002e 49       		.uleb128 0x49
 1664 002f 13       		.uleb128 0x13
 1665 0030 00       		.byte	0
 1666 0031 00       		.byte	0
 1667 0032 05       		.uleb128 0x5
 1668 0033 15       		.uleb128 0x15
 1669 0034 00       		.byte	0
 1670 0035 27       		.uleb128 0x27
 1671 0036 19       		.uleb128 0x19
 1672 0037 00       		.byte	0
 1673 0038 00       		.byte	0
 1674 0039 06       		.uleb128 0x6
 1675 003a 16       		.uleb128 0x16
 1676 003b 00       		.byte	0
 1677 003c 03       		.uleb128 0x3
 1678 003d 0E       		.uleb128 0xe
 1679 003e 3A       		.uleb128 0x3a
 1680 003f 0B       		.uleb128 0xb
 1681 0040 3B       		.uleb128 0x3b
 1682 0041 0B       		.uleb128 0xb
 1683 0042 49       		.uleb128 0x49
 1684 0043 13       		.uleb128 0x13
 1685 0044 00       		.byte	0
 1686 0045 00       		.byte	0
 1687 0046 07       		.uleb128 0x7
 1688 0047 16       		.uleb128 0x16
 1689 0048 00       		.byte	0
 1690 0049 03       		.uleb128 0x3
 1691 004a 0E       		.uleb128 0xe
 1692 004b 3A       		.uleb128 0x3a
 1693 004c 0B       		.uleb128 0xb
 1694 004d 3B       		.uleb128 0x3b
 1695 004e 05       		.uleb128 0x5
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 47


 1696 004f 49       		.uleb128 0x49
 1697 0050 13       		.uleb128 0x13
 1698 0051 00       		.byte	0
 1699 0052 00       		.byte	0
 1700 0053 08       		.uleb128 0x8
 1701 0054 35       		.uleb128 0x35
 1702 0055 00       		.byte	0
 1703 0056 49       		.uleb128 0x49
 1704 0057 13       		.uleb128 0x13
 1705 0058 00       		.byte	0
 1706 0059 00       		.byte	0
 1707 005a 09       		.uleb128 0x9
 1708 005b 2E       		.uleb128 0x2e
 1709 005c 01       		.byte	0x1
 1710 005d 03       		.uleb128 0x3
 1711 005e 0E       		.uleb128 0xe
 1712 005f 3A       		.uleb128 0x3a
 1713 0060 0B       		.uleb128 0xb
 1714 0061 3B       		.uleb128 0x3b
 1715 0062 05       		.uleb128 0x5
 1716 0063 27       		.uleb128 0x27
 1717 0064 19       		.uleb128 0x19
 1718 0065 11       		.uleb128 0x11
 1719 0066 01       		.uleb128 0x1
 1720 0067 12       		.uleb128 0x12
 1721 0068 06       		.uleb128 0x6
 1722 0069 40       		.uleb128 0x40
 1723 006a 18       		.uleb128 0x18
 1724 006b 9742     		.uleb128 0x2117
 1725 006d 19       		.uleb128 0x19
 1726 006e 01       		.uleb128 0x1
 1727 006f 13       		.uleb128 0x13
 1728 0070 00       		.byte	0
 1729 0071 00       		.byte	0
 1730 0072 0A       		.uleb128 0xa
 1731 0073 05       		.uleb128 0x5
 1732 0074 00       		.byte	0
 1733 0075 03       		.uleb128 0x3
 1734 0076 0E       		.uleb128 0xe
 1735 0077 3A       		.uleb128 0x3a
 1736 0078 0B       		.uleb128 0xb
 1737 0079 3B       		.uleb128 0x3b
 1738 007a 05       		.uleb128 0x5
 1739 007b 49       		.uleb128 0x49
 1740 007c 13       		.uleb128 0x13
 1741 007d 02       		.uleb128 0x2
 1742 007e 17       		.uleb128 0x17
 1743 007f 00       		.byte	0
 1744 0080 00       		.byte	0
 1745 0081 0B       		.uleb128 0xb
 1746 0082 34       		.uleb128 0x34
 1747 0083 00       		.byte	0
 1748 0084 03       		.uleb128 0x3
 1749 0085 0E       		.uleb128 0xe
 1750 0086 3A       		.uleb128 0x3a
 1751 0087 0B       		.uleb128 0xb
 1752 0088 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 48


 1753 0089 05       		.uleb128 0x5
 1754 008a 49       		.uleb128 0x49
 1755 008b 13       		.uleb128 0x13
 1756 008c 02       		.uleb128 0x2
 1757 008d 17       		.uleb128 0x17
 1758 008e 00       		.byte	0
 1759 008f 00       		.byte	0
 1760 0090 0C       		.uleb128 0xc
 1761 0091 898201   		.uleb128 0x4109
 1762 0094 01       		.byte	0x1
 1763 0095 11       		.uleb128 0x11
 1764 0096 01       		.uleb128 0x1
 1765 0097 31       		.uleb128 0x31
 1766 0098 13       		.uleb128 0x13
 1767 0099 00       		.byte	0
 1768 009a 00       		.byte	0
 1769 009b 0D       		.uleb128 0xd
 1770 009c 8A8201   		.uleb128 0x410a
 1771 009f 00       		.byte	0
 1772 00a0 02       		.uleb128 0x2
 1773 00a1 18       		.uleb128 0x18
 1774 00a2 9142     		.uleb128 0x2111
 1775 00a4 18       		.uleb128 0x18
 1776 00a5 00       		.byte	0
 1777 00a6 00       		.byte	0
 1778 00a7 0E       		.uleb128 0xe
 1779 00a8 2E       		.uleb128 0x2e
 1780 00a9 01       		.byte	0x1
 1781 00aa 3F       		.uleb128 0x3f
 1782 00ab 19       		.uleb128 0x19
 1783 00ac 03       		.uleb128 0x3
 1784 00ad 0E       		.uleb128 0xe
 1785 00ae 3A       		.uleb128 0x3a
 1786 00af 0B       		.uleb128 0xb
 1787 00b0 3B       		.uleb128 0x3b
 1788 00b1 0B       		.uleb128 0xb
 1789 00b2 27       		.uleb128 0x27
 1790 00b3 19       		.uleb128 0x19
 1791 00b4 11       		.uleb128 0x11
 1792 00b5 01       		.uleb128 0x1
 1793 00b6 12       		.uleb128 0x12
 1794 00b7 06       		.uleb128 0x6
 1795 00b8 40       		.uleb128 0x40
 1796 00b9 18       		.uleb128 0x18
 1797 00ba 9742     		.uleb128 0x2117
 1798 00bc 19       		.uleb128 0x19
 1799 00bd 01       		.uleb128 0x1
 1800 00be 13       		.uleb128 0x13
 1801 00bf 00       		.byte	0
 1802 00c0 00       		.byte	0
 1803 00c1 0F       		.uleb128 0xf
 1804 00c2 34       		.uleb128 0x34
 1805 00c3 00       		.byte	0
 1806 00c4 03       		.uleb128 0x3
 1807 00c5 0E       		.uleb128 0xe
 1808 00c6 3A       		.uleb128 0x3a
 1809 00c7 0B       		.uleb128 0xb
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 49


 1810 00c8 3B       		.uleb128 0x3b
 1811 00c9 0B       		.uleb128 0xb
 1812 00ca 49       		.uleb128 0x49
 1813 00cb 13       		.uleb128 0x13
 1814 00cc 02       		.uleb128 0x2
 1815 00cd 17       		.uleb128 0x17
 1816 00ce 00       		.byte	0
 1817 00cf 00       		.byte	0
 1818 00d0 10       		.uleb128 0x10
 1819 00d1 898201   		.uleb128 0x4109
 1820 00d4 00       		.byte	0
 1821 00d5 11       		.uleb128 0x11
 1822 00d6 01       		.uleb128 0x1
 1823 00d7 31       		.uleb128 0x31
 1824 00d8 13       		.uleb128 0x13
 1825 00d9 00       		.byte	0
 1826 00da 00       		.byte	0
 1827 00db 11       		.uleb128 0x11
 1828 00dc 898201   		.uleb128 0x4109
 1829 00df 01       		.byte	0x1
 1830 00e0 11       		.uleb128 0x11
 1831 00e1 01       		.uleb128 0x1
 1832 00e2 31       		.uleb128 0x31
 1833 00e3 13       		.uleb128 0x13
 1834 00e4 01       		.uleb128 0x1
 1835 00e5 13       		.uleb128 0x13
 1836 00e6 00       		.byte	0
 1837 00e7 00       		.byte	0
 1838 00e8 12       		.uleb128 0x12
 1839 00e9 2E       		.uleb128 0x2e
 1840 00ea 01       		.byte	0x1
 1841 00eb 3F       		.uleb128 0x3f
 1842 00ec 19       		.uleb128 0x19
 1843 00ed 03       		.uleb128 0x3
 1844 00ee 0E       		.uleb128 0xe
 1845 00ef 3A       		.uleb128 0x3a
 1846 00f0 0B       		.uleb128 0xb
 1847 00f1 3B       		.uleb128 0x3b
 1848 00f2 05       		.uleb128 0x5
 1849 00f3 27       		.uleb128 0x27
 1850 00f4 19       		.uleb128 0x19
 1851 00f5 11       		.uleb128 0x11
 1852 00f6 01       		.uleb128 0x1
 1853 00f7 12       		.uleb128 0x12
 1854 00f8 06       		.uleb128 0x6
 1855 00f9 40       		.uleb128 0x40
 1856 00fa 18       		.uleb128 0x18
 1857 00fb 9742     		.uleb128 0x2117
 1858 00fd 19       		.uleb128 0x19
 1859 00fe 01       		.uleb128 0x1
 1860 00ff 13       		.uleb128 0x13
 1861 0100 00       		.byte	0
 1862 0101 00       		.byte	0
 1863 0102 13       		.uleb128 0x13
 1864 0103 2E       		.uleb128 0x2e
 1865 0104 00       		.byte	0
 1866 0105 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 50


 1867 0106 19       		.uleb128 0x19
 1868 0107 03       		.uleb128 0x3
 1869 0108 0E       		.uleb128 0xe
 1870 0109 3A       		.uleb128 0x3a
 1871 010a 0B       		.uleb128 0xb
 1872 010b 3B       		.uleb128 0x3b
 1873 010c 05       		.uleb128 0x5
 1874 010d 27       		.uleb128 0x27
 1875 010e 19       		.uleb128 0x19
 1876 010f 11       		.uleb128 0x11
 1877 0110 01       		.uleb128 0x1
 1878 0111 12       		.uleb128 0x12
 1879 0112 06       		.uleb128 0x6
 1880 0113 40       		.uleb128 0x40
 1881 0114 18       		.uleb128 0x18
 1882 0115 9742     		.uleb128 0x2117
 1883 0117 19       		.uleb128 0x19
 1884 0118 00       		.byte	0
 1885 0119 00       		.byte	0
 1886 011a 14       		.uleb128 0x14
 1887 011b 2E       		.uleb128 0x2e
 1888 011c 01       		.byte	0x1
 1889 011d 3F       		.uleb128 0x3f
 1890 011e 19       		.uleb128 0x19
 1891 011f 03       		.uleb128 0x3
 1892 0120 0E       		.uleb128 0xe
 1893 0121 3A       		.uleb128 0x3a
 1894 0122 0B       		.uleb128 0xb
 1895 0123 3B       		.uleb128 0x3b
 1896 0124 05       		.uleb128 0x5
 1897 0125 27       		.uleb128 0x27
 1898 0126 19       		.uleb128 0x19
 1899 0127 49       		.uleb128 0x49
 1900 0128 13       		.uleb128 0x13
 1901 0129 11       		.uleb128 0x11
 1902 012a 01       		.uleb128 0x1
 1903 012b 12       		.uleb128 0x12
 1904 012c 06       		.uleb128 0x6
 1905 012d 40       		.uleb128 0x40
 1906 012e 18       		.uleb128 0x18
 1907 012f 9742     		.uleb128 0x2117
 1908 0131 19       		.uleb128 0x19
 1909 0132 01       		.uleb128 0x1
 1910 0133 13       		.uleb128 0x13
 1911 0134 00       		.byte	0
 1912 0135 00       		.byte	0
 1913 0136 15       		.uleb128 0x15
 1914 0137 2E       		.uleb128 0x2e
 1915 0138 00       		.byte	0
 1916 0139 3F       		.uleb128 0x3f
 1917 013a 19       		.uleb128 0x19
 1918 013b 03       		.uleb128 0x3
 1919 013c 0E       		.uleb128 0xe
 1920 013d 3A       		.uleb128 0x3a
 1921 013e 0B       		.uleb128 0xb
 1922 013f 3B       		.uleb128 0x3b
 1923 0140 05       		.uleb128 0x5
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 51


 1924 0141 27       		.uleb128 0x27
 1925 0142 19       		.uleb128 0x19
 1926 0143 49       		.uleb128 0x49
 1927 0144 13       		.uleb128 0x13
 1928 0145 11       		.uleb128 0x11
 1929 0146 01       		.uleb128 0x1
 1930 0147 12       		.uleb128 0x12
 1931 0148 06       		.uleb128 0x6
 1932 0149 40       		.uleb128 0x40
 1933 014a 18       		.uleb128 0x18
 1934 014b 9742     		.uleb128 0x2117
 1935 014d 19       		.uleb128 0x19
 1936 014e 00       		.byte	0
 1937 014f 00       		.byte	0
 1938 0150 16       		.uleb128 0x16
 1939 0151 34       		.uleb128 0x34
 1940 0152 00       		.byte	0
 1941 0153 03       		.uleb128 0x3
 1942 0154 08       		.uleb128 0x8
 1943 0155 3A       		.uleb128 0x3a
 1944 0156 0B       		.uleb128 0xb
 1945 0157 3B       		.uleb128 0x3b
 1946 0158 05       		.uleb128 0x5
 1947 0159 49       		.uleb128 0x49
 1948 015a 13       		.uleb128 0x13
 1949 015b 02       		.uleb128 0x2
 1950 015c 17       		.uleb128 0x17
 1951 015d 00       		.byte	0
 1952 015e 00       		.byte	0
 1953 015f 17       		.uleb128 0x17
 1954 0160 05       		.uleb128 0x5
 1955 0161 00       		.byte	0
 1956 0162 03       		.uleb128 0x3
 1957 0163 0E       		.uleb128 0xe
 1958 0164 3A       		.uleb128 0x3a
 1959 0165 0B       		.uleb128 0xb
 1960 0166 3B       		.uleb128 0x3b
 1961 0167 05       		.uleb128 0x5
 1962 0168 49       		.uleb128 0x49
 1963 0169 13       		.uleb128 0x13
 1964 016a 02       		.uleb128 0x2
 1965 016b 18       		.uleb128 0x18
 1966 016c 00       		.byte	0
 1967 016d 00       		.byte	0
 1968 016e 18       		.uleb128 0x18
 1969 016f 2E       		.uleb128 0x2e
 1970 0170 01       		.byte	0x1
 1971 0171 3F       		.uleb128 0x3f
 1972 0172 19       		.uleb128 0x19
 1973 0173 03       		.uleb128 0x3
 1974 0174 0E       		.uleb128 0xe
 1975 0175 3A       		.uleb128 0x3a
 1976 0176 0B       		.uleb128 0xb
 1977 0177 3B       		.uleb128 0x3b
 1978 0178 05       		.uleb128 0x5
 1979 0179 27       		.uleb128 0x27
 1980 017a 19       		.uleb128 0x19
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 52


 1981 017b 49       		.uleb128 0x49
 1982 017c 13       		.uleb128 0x13
 1983 017d 11       		.uleb128 0x11
 1984 017e 01       		.uleb128 0x1
 1985 017f 12       		.uleb128 0x12
 1986 0180 06       		.uleb128 0x6
 1987 0181 40       		.uleb128 0x40
 1988 0182 18       		.uleb128 0x18
 1989 0183 9642     		.uleb128 0x2116
 1990 0185 19       		.uleb128 0x19
 1991 0186 01       		.uleb128 0x1
 1992 0187 13       		.uleb128 0x13
 1993 0188 00       		.byte	0
 1994 0189 00       		.byte	0
 1995 018a 19       		.uleb128 0x19
 1996 018b 34       		.uleb128 0x34
 1997 018c 00       		.byte	0
 1998 018d 03       		.uleb128 0x3
 1999 018e 0E       		.uleb128 0xe
 2000 018f 3A       		.uleb128 0x3a
 2001 0190 0B       		.uleb128 0xb
 2002 0191 3B       		.uleb128 0x3b
 2003 0192 05       		.uleb128 0x5
 2004 0193 49       		.uleb128 0x49
 2005 0194 13       		.uleb128 0x13
 2006 0195 00       		.byte	0
 2007 0196 00       		.byte	0
 2008 0197 1A       		.uleb128 0x1a
 2009 0198 34       		.uleb128 0x34
 2010 0199 00       		.byte	0
 2011 019a 03       		.uleb128 0x3
 2012 019b 0E       		.uleb128 0xe
 2013 019c 3A       		.uleb128 0x3a
 2014 019d 0B       		.uleb128 0xb
 2015 019e 3B       		.uleb128 0x3b
 2016 019f 05       		.uleb128 0x5
 2017 01a0 49       		.uleb128 0x49
 2018 01a1 13       		.uleb128 0x13
 2019 01a2 02       		.uleb128 0x2
 2020 01a3 18       		.uleb128 0x18
 2021 01a4 00       		.byte	0
 2022 01a5 00       		.byte	0
 2023 01a6 1B       		.uleb128 0x1b
 2024 01a7 34       		.uleb128 0x34
 2025 01a8 00       		.byte	0
 2026 01a9 03       		.uleb128 0x3
 2027 01aa 0E       		.uleb128 0xe
 2028 01ab 3A       		.uleb128 0x3a
 2029 01ac 0B       		.uleb128 0xb
 2030 01ad 3B       		.uleb128 0x3b
 2031 01ae 0B       		.uleb128 0xb
 2032 01af 49       		.uleb128 0x49
 2033 01b0 13       		.uleb128 0x13
 2034 01b1 3F       		.uleb128 0x3f
 2035 01b2 19       		.uleb128 0x19
 2036 01b3 02       		.uleb128 0x2
 2037 01b4 18       		.uleb128 0x18
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 53


 2038 01b5 00       		.byte	0
 2039 01b6 00       		.byte	0
 2040 01b7 1C       		.uleb128 0x1c
 2041 01b8 2E       		.uleb128 0x2e
 2042 01b9 01       		.byte	0x1
 2043 01ba 3F       		.uleb128 0x3f
 2044 01bb 19       		.uleb128 0x19
 2045 01bc 03       		.uleb128 0x3
 2046 01bd 0E       		.uleb128 0xe
 2047 01be 3A       		.uleb128 0x3a
 2048 01bf 0B       		.uleb128 0xb
 2049 01c0 3B       		.uleb128 0x3b
 2050 01c1 0B       		.uleb128 0xb
 2051 01c2 27       		.uleb128 0x27
 2052 01c3 19       		.uleb128 0x19
 2053 01c4 3C       		.uleb128 0x3c
 2054 01c5 19       		.uleb128 0x19
 2055 01c6 01       		.uleb128 0x1
 2056 01c7 13       		.uleb128 0x13
 2057 01c8 00       		.byte	0
 2058 01c9 00       		.byte	0
 2059 01ca 1D       		.uleb128 0x1d
 2060 01cb 05       		.uleb128 0x5
 2061 01cc 00       		.byte	0
 2062 01cd 49       		.uleb128 0x49
 2063 01ce 13       		.uleb128 0x13
 2064 01cf 00       		.byte	0
 2065 01d0 00       		.byte	0
 2066 01d1 1E       		.uleb128 0x1e
 2067 01d2 2E       		.uleb128 0x2e
 2068 01d3 00       		.byte	0
 2069 01d4 3F       		.uleb128 0x3f
 2070 01d5 19       		.uleb128 0x19
 2071 01d6 03       		.uleb128 0x3
 2072 01d7 0E       		.uleb128 0xe
 2073 01d8 3A       		.uleb128 0x3a
 2074 01d9 0B       		.uleb128 0xb
 2075 01da 3B       		.uleb128 0x3b
 2076 01db 0B       		.uleb128 0xb
 2077 01dc 27       		.uleb128 0x27
 2078 01dd 19       		.uleb128 0x19
 2079 01de 49       		.uleb128 0x49
 2080 01df 13       		.uleb128 0x13
 2081 01e0 3C       		.uleb128 0x3c
 2082 01e1 19       		.uleb128 0x19
 2083 01e2 00       		.byte	0
 2084 01e3 00       		.byte	0
 2085 01e4 1F       		.uleb128 0x1f
 2086 01e5 2E       		.uleb128 0x2e
 2087 01e6 01       		.byte	0x1
 2088 01e7 3F       		.uleb128 0x3f
 2089 01e8 19       		.uleb128 0x19
 2090 01e9 03       		.uleb128 0x3
 2091 01ea 0E       		.uleb128 0xe
 2092 01eb 3A       		.uleb128 0x3a
 2093 01ec 0B       		.uleb128 0xb
 2094 01ed 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 54


 2095 01ee 0B       		.uleb128 0xb
 2096 01ef 27       		.uleb128 0x27
 2097 01f0 19       		.uleb128 0x19
 2098 01f1 49       		.uleb128 0x49
 2099 01f2 13       		.uleb128 0x13
 2100 01f3 3C       		.uleb128 0x3c
 2101 01f4 19       		.uleb128 0x19
 2102 01f5 00       		.byte	0
 2103 01f6 00       		.byte	0
 2104 01f7 00       		.byte	0
 2105              		.section	.debug_loc,"",%progbits
 2106              	.Ldebug_loc0:
 2107              	.LLST0:
 2108 0000 00000000 		.4byte	.LVL0
 2109 0004 1E000000 		.4byte	.LVL3
 2110 0008 0100     		.2byte	0x1
 2111 000a 50       		.byte	0x50
 2112 000b 1E000000 		.4byte	.LVL3
 2113 000f 26000000 		.4byte	.LVL5
 2114 0013 0400     		.2byte	0x4
 2115 0015 F3       		.byte	0xf3
 2116 0016 01       		.uleb128 0x1
 2117 0017 50       		.byte	0x50
 2118 0018 9F       		.byte	0x9f
 2119 0019 26000000 		.4byte	.LVL5
 2120 001d 2A000000 		.4byte	.LVL6
 2121 0021 0100     		.2byte	0x1
 2122 0023 50       		.byte	0x50
 2123 0024 2A000000 		.4byte	.LVL6
 2124 0028 5C000000 		.4byte	.LFE12
 2125 002c 0400     		.2byte	0x4
 2126 002e F3       		.byte	0xf3
 2127 002f 01       		.uleb128 0x1
 2128 0030 50       		.byte	0x50
 2129 0031 9F       		.byte	0x9f
 2130 0032 00000000 		.4byte	0
 2131 0036 00000000 		.4byte	0
 2132              	.LLST1:
 2133 003a 16000000 		.4byte	.LVL1
 2134 003e 1C000000 		.4byte	.LVL2
 2135 0042 0400     		.2byte	0x4
 2136 0044 0A       		.byte	0xa
 2137 0045 0001     		.2byte	0x100
 2138 0047 9F       		.byte	0x9f
 2139 0048 1C000000 		.4byte	.LVL2
 2140 004c 26000000 		.4byte	.LVL5
 2141 0050 0200     		.2byte	0x2
 2142 0052 30       		.byte	0x30
 2143 0053 9F       		.byte	0x9f
 2144 0054 2A000000 		.4byte	.LVL6
 2145 0058 38000000 		.4byte	.LVL7
 2146 005c 0100     		.2byte	0x1
 2147 005e 53       		.byte	0x53
 2148 005f 00000000 		.4byte	0
 2149 0063 00000000 		.4byte	0
 2150              	.LLST2:
 2151 0067 38000000 		.4byte	.LVL10
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 55


 2152 006b 3C000000 		.4byte	.LVL11
 2153 006f 0500     		.2byte	0x5
 2154 0071 72       		.byte	0x72
 2155 0072 00       		.sleb128 0
 2156 0073 32       		.byte	0x32
 2157 0074 21       		.byte	0x21
 2158 0075 9F       		.byte	0x9f
 2159 0076 3C000000 		.4byte	.LVL11
 2160 007a 40000000 		.4byte	.LVL12
 2161 007e 0100     		.2byte	0x1
 2162 0080 52       		.byte	0x52
 2163 0081 00000000 		.4byte	0
 2164 0085 00000000 		.4byte	0
 2165              	.LLST3:
 2166 0089 08000000 		.4byte	.LVL9
 2167 008d 76000000 		.4byte	.LVL13
 2168 0091 0100     		.2byte	0x1
 2169 0093 50       		.byte	0x50
 2170 0094 76000000 		.4byte	.LVL13
 2171 0098 88000000 		.4byte	.LVL16
 2172 009c 0100     		.2byte	0x1
 2173 009e 54       		.byte	0x54
 2174 009f 00000000 		.4byte	0
 2175 00a3 00000000 		.4byte	0
 2176              	.LLST4:
 2177 00a7 06000000 		.4byte	.LVL17
 2178 00ab 3F000000 		.4byte	.LVL18-1
 2179 00af 0100     		.2byte	0x1
 2180 00b1 50       		.byte	0x50
 2181 00b2 00000000 		.4byte	0
 2182 00b6 00000000 		.4byte	0
 2183              	.LLST5:
 2184 00ba 00000000 		.4byte	.LVL19
 2185 00be 04000000 		.4byte	.LVL20
 2186 00c2 0100     		.2byte	0x1
 2187 00c4 50       		.byte	0x50
 2188 00c5 04000000 		.4byte	.LVL20
 2189 00c9 10000000 		.4byte	.LVL22
 2190 00cd 0100     		.2byte	0x1
 2191 00cf 50       		.byte	0x50
 2192 00d0 00000000 		.4byte	0
 2193 00d4 00000000 		.4byte	0
 2194              	.LLST6:
 2195 00d8 0C000000 		.4byte	.LVL21
 2196 00dc 10000000 		.4byte	.LVL22
 2197 00e0 0100     		.2byte	0x1
 2198 00e2 52       		.byte	0x52
 2199 00e3 10000000 		.4byte	.LVL22
 2200 00e7 18000000 		.4byte	.LFE4
 2201 00eb 0100     		.2byte	0x1
 2202 00ed 50       		.byte	0x50
 2203 00ee 00000000 		.4byte	0
 2204 00f2 00000000 		.4byte	0
 2205              	.LLST7:
 2206 00f6 00000000 		.4byte	.LVL23
 2207 00fa 1C000000 		.4byte	.LVL26
 2208 00fe 0100     		.2byte	0x1
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 56


 2209 0100 50       		.byte	0x50
 2210 0101 1C000000 		.4byte	.LVL26
 2211 0105 24000000 		.4byte	.LVL28
 2212 0109 0400     		.2byte	0x4
 2213 010b F3       		.byte	0xf3
 2214 010c 01       		.uleb128 0x1
 2215 010d 50       		.byte	0x50
 2216 010e 9F       		.byte	0x9f
 2217 010f 24000000 		.4byte	.LVL28
 2218 0113 26000000 		.4byte	.LVL29
 2219 0117 0100     		.2byte	0x1
 2220 0119 50       		.byte	0x50
 2221 011a 26000000 		.4byte	.LVL29
 2222 011e 38000000 		.4byte	.LFE5
 2223 0122 0400     		.2byte	0x4
 2224 0124 F3       		.byte	0xf3
 2225 0125 01       		.uleb128 0x1
 2226 0126 50       		.byte	0x50
 2227 0127 9F       		.byte	0x9f
 2228 0128 00000000 		.4byte	0
 2229 012c 00000000 		.4byte	0
 2230              	.LLST8:
 2231 0130 16000000 		.4byte	.LVL24
 2232 0134 1A000000 		.4byte	.LVL25
 2233 0138 0300     		.2byte	0x3
 2234 013a 08       		.byte	0x8
 2235 013b 44       		.byte	0x44
 2236 013c 9F       		.byte	0x9f
 2237 013d 1A000000 		.4byte	.LVL25
 2238 0141 24000000 		.4byte	.LVL28
 2239 0145 0300     		.2byte	0x3
 2240 0147 09       		.byte	0x9
 2241 0148 C4       		.byte	0xc4
 2242 0149 9F       		.byte	0x9f
 2243 014a 26000000 		.4byte	.LVL29
 2244 014e 2F000000 		.4byte	.LVL30-1
 2245 0152 0100     		.2byte	0x1
 2246 0154 52       		.byte	0x52
 2247 0155 00000000 		.4byte	0
 2248 0159 00000000 		.4byte	0
 2249              	.LLST9:
 2250 015d 00000000 		.4byte	.LVL37
 2251 0161 14000000 		.4byte	.LVL39
 2252 0165 0100     		.2byte	0x1
 2253 0167 50       		.byte	0x50
 2254 0168 14000000 		.4byte	.LVL39
 2255 016c 24000000 		.4byte	.LFE8
 2256 0170 0400     		.2byte	0x4
 2257 0172 F3       		.byte	0xf3
 2258 0173 01       		.uleb128 0x1
 2259 0174 50       		.byte	0x50
 2260 0175 9F       		.byte	0x9f
 2261 0176 00000000 		.4byte	0
 2262 017a 00000000 		.4byte	0
 2263              	.LLST10:
 2264 017e 06000000 		.4byte	.LVL38
 2265 0182 17000000 		.4byte	.LVL40-1
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 57


 2266 0186 0500     		.2byte	0x5
 2267 0188 73       		.byte	0x73
 2268 0189 00       		.sleb128 0
 2269 018a 31       		.byte	0x31
 2270 018b 1A       		.byte	0x1a
 2271 018c 9F       		.byte	0x9f
 2272 018d 00000000 		.4byte	0
 2273 0191 00000000 		.4byte	0
 2274              	.LLST11:
 2275 0195 04000000 		.4byte	.LVL41
 2276 0199 0A000000 		.4byte	.LVL42
 2277 019d 0100     		.2byte	0x1
 2278 019f 50       		.byte	0x50
 2279 01a0 00000000 		.4byte	0
 2280 01a4 00000000 		.4byte	0
 2281              	.LLST12:
 2282 01a8 00000000 		.4byte	.LVL44
 2283 01ac 04000000 		.4byte	.LVL45
 2284 01b0 0100     		.2byte	0x1
 2285 01b2 50       		.byte	0x50
 2286 01b3 04000000 		.4byte	.LVL45
 2287 01b7 10000000 		.4byte	.LFE13
 2288 01bb 0400     		.2byte	0x4
 2289 01bd F3       		.byte	0xf3
 2290 01be 01       		.uleb128 0x1
 2291 01bf 50       		.byte	0x50
 2292 01c0 9F       		.byte	0x9f
 2293 01c1 00000000 		.4byte	0
 2294 01c5 00000000 		.4byte	0
 2295              	.LLST13:
 2296 01c9 00000000 		.4byte	.LVL47
 2297 01cd 20000000 		.4byte	.LVL51
 2298 01d1 0100     		.2byte	0x1
 2299 01d3 50       		.byte	0x50
 2300 01d4 20000000 		.4byte	.LVL51
 2301 01d8 22000000 		.4byte	.LVL52
 2302 01dc 0400     		.2byte	0x4
 2303 01de F3       		.byte	0xf3
 2304 01df 01       		.uleb128 0x1
 2305 01e0 50       		.byte	0x50
 2306 01e1 9F       		.byte	0x9f
 2307 01e2 22000000 		.4byte	.LVL52
 2308 01e6 44000000 		.4byte	.LVL53
 2309 01ea 0100     		.2byte	0x1
 2310 01ec 50       		.byte	0x50
 2311 01ed 00000000 		.4byte	0
 2312 01f1 00000000 		.4byte	0
 2313              	.LLST14:
 2314 01f5 44000000 		.4byte	.LVL53
 2315 01f9 46000000 		.4byte	.LVL54
 2316 01fd 0100     		.2byte	0x1
 2317 01ff 50       		.byte	0x50
 2318 0200 46000000 		.4byte	.LVL54
 2319 0204 54000000 		.4byte	.LFE15
 2320 0208 0600     		.2byte	0x6
 2321 020a 72       		.byte	0x72
 2322 020b 00       		.sleb128 0
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 58


 2323 020c 73       		.byte	0x73
 2324 020d 00       		.sleb128 0
 2325 020e 1B       		.byte	0x1b
 2326 020f 9F       		.byte	0x9f
 2327 0210 00000000 		.4byte	0
 2328 0214 00000000 		.4byte	0
 2329              	.LLST15:
 2330 0218 14000000 		.4byte	.LVL48
 2331 021c 16000000 		.4byte	.LVL49
 2332 0220 0100     		.2byte	0x1
 2333 0222 53       		.byte	0x53
 2334 0223 1A000000 		.4byte	.LVL50
 2335 0227 54000000 		.4byte	.LFE15
 2336 022b 0100     		.2byte	0x1
 2337 022d 53       		.byte	0x53
 2338 022e 00000000 		.4byte	0
 2339 0232 00000000 		.4byte	0
 2340              	.LLST16:
 2341 0236 00000000 		.4byte	.LVL55
 2342 023a 20000000 		.4byte	.LVL59
 2343 023e 0100     		.2byte	0x1
 2344 0240 50       		.byte	0x50
 2345 0241 20000000 		.4byte	.LVL59
 2346 0245 28000000 		.4byte	.LVL60
 2347 0249 0600     		.2byte	0x6
 2348 024b 70       		.byte	0x70
 2349 024c 00       		.sleb128 0
 2350 024d 73       		.byte	0x73
 2351 024e 00       		.sleb128 0
 2352 024f 1C       		.byte	0x1c
 2353 0250 9F       		.byte	0x9f
 2354 0251 00000000 		.4byte	0
 2355 0255 00000000 		.4byte	0
 2356              	.LLST17:
 2357 0259 16000000 		.4byte	.LVL56
 2358 025d 18000000 		.4byte	.LVL57
 2359 0261 0100     		.2byte	0x1
 2360 0263 52       		.byte	0x52
 2361 0264 1C000000 		.4byte	.LVL58
 2362 0268 35000000 		.4byte	.LVL61-1
 2363 026c 0100     		.2byte	0x1
 2364 026e 52       		.byte	0x52
 2365 026f 00000000 		.4byte	0
 2366 0273 00000000 		.4byte	0
 2367              	.LLST18:
 2368 0277 00000000 		.4byte	.LVL62
 2369 027b 22000000 		.4byte	.LVL66
 2370 027f 0100     		.2byte	0x1
 2371 0281 50       		.byte	0x50
 2372 0282 22000000 		.4byte	.LVL66
 2373 0286 24000000 		.4byte	.LVL67
 2374 028a 0100     		.2byte	0x1
 2375 028c 50       		.byte	0x50
 2376 028d 00000000 		.4byte	0
 2377 0291 00000000 		.4byte	0
 2378              	.LLST19:
 2379 0295 16000000 		.4byte	.LVL63
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 59


 2380 0299 18000000 		.4byte	.LVL64
 2381 029d 0100     		.2byte	0x1
 2382 029f 55       		.byte	0x55
 2383 02a0 1C000000 		.4byte	.LVL65
 2384 02a4 40000000 		.4byte	.LVL72
 2385 02a8 0100     		.2byte	0x1
 2386 02aa 55       		.byte	0x55
 2387 02ab 00000000 		.4byte	0
 2388 02af 00000000 		.4byte	0
 2389              		.section	.debug_aranges,"",%progbits
 2390 0000 A4000000 		.4byte	0xa4
 2391 0004 0200     		.2byte	0x2
 2392 0006 00000000 		.4byte	.Ldebug_info0
 2393 000a 04       		.byte	0x4
 2394 000b 00       		.byte	0
 2395 000c 0000     		.2byte	0
 2396 000e 0000     		.2byte	0
 2397 0010 00000000 		.4byte	.LFB12
 2398 0014 5C000000 		.4byte	.LFE12-.LFB12
 2399 0018 00000000 		.4byte	.LFB2
 2400 001c 90000000 		.4byte	.LFE2-.LFB2
 2401 0020 00000000 		.4byte	.LFB3
 2402 0024 48000000 		.4byte	.LFE3-.LFB3
 2403 0028 00000000 		.4byte	.LFB4
 2404 002c 18000000 		.4byte	.LFE4-.LFB4
 2405 0030 00000000 		.4byte	.LFB5
 2406 0034 38000000 		.4byte	.LFE5-.LFB5
 2407 0038 00000000 		.4byte	.LFB1
 2408 003c 3C000000 		.4byte	.LFE1-.LFB1
 2409 0040 00000000 		.4byte	.LFB0
 2410 0044 1C000000 		.4byte	.LFE0-.LFB0
 2411 0048 00000000 		.4byte	.LFB6
 2412 004c 10000000 		.4byte	.LFE6-.LFB6
 2413 0050 00000000 		.4byte	.LFB7
 2414 0054 10000000 		.4byte	.LFE7-.LFB7
 2415 0058 00000000 		.4byte	.LFB8
 2416 005c 24000000 		.4byte	.LFE8-.LFB8
 2417 0060 00000000 		.4byte	.LFB9
 2418 0064 18000000 		.4byte	.LFE9-.LFB9
 2419 0068 00000000 		.4byte	.LFB10
 2420 006c 18000000 		.4byte	.LFE10-.LFB10
 2421 0070 00000000 		.4byte	.LFB11
 2422 0074 0C000000 		.4byte	.LFE11-.LFB11
 2423 0078 00000000 		.4byte	.LFB13
 2424 007c 10000000 		.4byte	.LFE13-.LFB13
 2425 0080 00000000 		.4byte	.LFB14
 2426 0084 0C000000 		.4byte	.LFE14-.LFB14
 2427 0088 00000000 		.4byte	.LFB15
 2428 008c 54000000 		.4byte	.LFE15-.LFB15
 2429 0090 00000000 		.4byte	.LFB16
 2430 0094 48000000 		.4byte	.LFE16-.LFB16
 2431 0098 00000000 		.4byte	.LFB17
 2432 009c 50000000 		.4byte	.LFE17-.LFB17
 2433 00a0 00000000 		.4byte	0
 2434 00a4 00000000 		.4byte	0
 2435              		.section	.debug_ranges,"",%progbits
 2436              	.Ldebug_ranges0:
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 60


 2437 0000 00000000 		.4byte	.LFB12
 2438 0004 5C000000 		.4byte	.LFE12
 2439 0008 00000000 		.4byte	.LFB2
 2440 000c 90000000 		.4byte	.LFE2
 2441 0010 00000000 		.4byte	.LFB3
 2442 0014 48000000 		.4byte	.LFE3
 2443 0018 00000000 		.4byte	.LFB4
 2444 001c 18000000 		.4byte	.LFE4
 2445 0020 00000000 		.4byte	.LFB5
 2446 0024 38000000 		.4byte	.LFE5
 2447 0028 00000000 		.4byte	.LFB1
 2448 002c 3C000000 		.4byte	.LFE1
 2449 0030 00000000 		.4byte	.LFB0
 2450 0034 1C000000 		.4byte	.LFE0
 2451 0038 00000000 		.4byte	.LFB6
 2452 003c 10000000 		.4byte	.LFE6
 2453 0040 00000000 		.4byte	.LFB7
 2454 0044 10000000 		.4byte	.LFE7
 2455 0048 00000000 		.4byte	.LFB8
 2456 004c 24000000 		.4byte	.LFE8
 2457 0050 00000000 		.4byte	.LFB9
 2458 0054 18000000 		.4byte	.LFE9
 2459 0058 00000000 		.4byte	.LFB10
 2460 005c 18000000 		.4byte	.LFE10
 2461 0060 00000000 		.4byte	.LFB11
 2462 0064 0C000000 		.4byte	.LFE11
 2463 0068 00000000 		.4byte	.LFB13
 2464 006c 10000000 		.4byte	.LFE13
 2465 0070 00000000 		.4byte	.LFB14
 2466 0074 0C000000 		.4byte	.LFE14
 2467 0078 00000000 		.4byte	.LFB15
 2468 007c 54000000 		.4byte	.LFE15
 2469 0080 00000000 		.4byte	.LFB16
 2470 0084 48000000 		.4byte	.LFE16
 2471 0088 00000000 		.4byte	.LFB17
 2472 008c 50000000 		.4byte	.LFE17
 2473 0090 00000000 		.4byte	0
 2474 0094 00000000 		.4byte	0
 2475              		.section	.debug_line,"",%progbits
 2476              	.Ldebug_line0:
 2477 0000 0D020000 		.section	.debug_str,"MS",%progbits,1
 2477      02005E00 
 2477      00000201 
 2477      FB0E0D00 
 2477      01010101 
 2478              	.LASF12:
 2479 0000 75696E74 		.ascii	"uint16\000"
 2479      313600
 2480              	.LASF45:
 2481 0007 61646347 		.ascii	"adcGain\000"
 2481      61696E00 
 2482              	.LASF61:
 2483 000f 43794578 		.ascii	"CyExitCriticalSection\000"
 2483      69744372 
 2483      69746963 
 2483      616C5365 
 2483      6374696F 
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 61


 2484              	.LASF65:
 2485 0025 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2485      4320342E 
 2485      382E3420 
 2485      32303134 
 2485      30353236 
 2486 0058 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 2486      20726576 
 2486      6973696F 
 2486      6E203231 
 2486      31333538 
 2487 008b 67202D66 		.ascii	"g -ffunction-sections\000"
 2487      66756E63 
 2487      74696F6E 
 2487      2D736563 
 2487      74696F6E 
 2488              	.LASF25:
 2489 00a1 636F756E 		.ascii	"counts\000"
 2489      747300
 2490              	.LASF52:
 2491 00a8 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2491      436F756E 
 2491      7473546F 
 2491      5F566F6C 
 2491      747300
 2492              	.LASF34:
 2493 00bb 4144435F 		.ascii	"ADC_Init\000"
 2493      496E6974 
 2493      00
 2494              	.LASF8:
 2495 00c4 6C6F6E67 		.ascii	"long long unsigned int\000"
 2495      206C6F6E 
 2495      6720756E 
 2495      7369676E 
 2495      65642069 
 2496              	.LASF36:
 2497 00db 4144435F 		.ascii	"ADC_StartConvert\000"
 2497      53746172 
 2497      74436F6E 
 2497      76657274 
 2497      00
 2498              	.LASF7:
 2499 00ec 6C6F6E67 		.ascii	"long long int\000"
 2499      206C6F6E 
 2499      6720696E 
 2499      7400
 2500              	.LASF1:
 2501 00fa 7369676E 		.ascii	"signed char\000"
 2501      65642063 
 2501      68617200 
 2502              	.LASF39:
 2503 0106 73746174 		.ascii	"status\000"
 2503      757300
 2504              	.LASF66:
 2505 010d 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\ADC.c\000"
 2505      6E657261 
 2505      7465645F 
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 62


 2505      536F7572 
 2505      63655C50 
 2506              	.LASF16:
 2507 012c 696E7433 		.ascii	"int32\000"
 2507      3200
 2508              	.LASF35:
 2509 0132 4144435F 		.ascii	"ADC_Start\000"
 2509      53746172 
 2509      7400
 2510              	.LASF5:
 2511 013c 6C6F6E67 		.ascii	"long int\000"
 2511      20696E74 
 2511      00
 2512              	.LASF51:
 2513 0145 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2513      436F756E 
 2513      7473546F 
 2513      5F75566F 
 2513      6C747300 
 2514              	.LASF57:
 2515 0159 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2515      636F756E 
 2515      74735065 
 2515      72313056 
 2515      6F6C7400 
 2516              	.LASF56:
 2517 016d 4144435F 		.ascii	"ADC_countsPerVolt\000"
 2517      636F756E 
 2517      74735065 
 2517      72566F6C 
 2517      7400
 2518              	.LASF22:
 2519 017f 72656731 		.ascii	"reg16\000"
 2519      3600
 2520              	.LASF11:
 2521 0185 75696E74 		.ascii	"uint8\000"
 2521      3800
 2522              	.LASF60:
 2523 018b 43794465 		.ascii	"CyDelayUs\000"
 2523      6C617955 
 2523      7300
 2524              	.LASF19:
 2525 0195 646F7562 		.ascii	"double\000"
 2525      6C6500
 2526              	.LASF13:
 2527 019c 75696E74 		.ascii	"uint32\000"
 2527      333200
 2528              	.LASF50:
 2529 01a3 636F756E 		.ascii	"countsPer10Volt\000"
 2529      74735065 
 2529      72313056 
 2529      6F6C7400 
 2530              	.LASF64:
 2531 01b3 4379496E 		.ascii	"CyIntSetVector\000"
 2531      74536574 
 2531      56656374 
 2531      6F7200
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 63


 2532              	.LASF54:
 2533 01c2 4144435F 		.ascii	"ADC_initVar\000"
 2533      696E6974 
 2533      56617200 
 2534              	.LASF30:
 2535 01ce 4144435F 		.ascii	"ADC_SetPower\000"
 2535      53657450 
 2535      6F776572 
 2535      00
 2536              	.LASF38:
 2537 01db 7265744D 		.ascii	"retMode\000"
 2537      6F646500 
 2538              	.LASF0:
 2539 01e3 756E7369 		.ascii	"unsigned int\000"
 2539      676E6564 
 2539      20696E74 
 2539      00
 2540              	.LASF70:
 2541 01f0 75566F6C 		.ascii	"uVolts\000"
 2541      747300
 2542              	.LASF6:
 2543 01f7 6C6F6E67 		.ascii	"long unsigned int\000"
 2543      20756E73 
 2543      69676E65 
 2543      6420696E 
 2543      7400
 2544              	.LASF53:
 2545 0209 766F6C74 		.ascii	"volts\000"
 2545      7300
 2546              	.LASF71:
 2547 020f 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2547      74657243 
 2547      72697469 
 2547      63616C53 
 2547      65637469 
 2548              	.LASF4:
 2549 0226 73686F72 		.ascii	"short unsigned int\000"
 2549      7420756E 
 2549      7369676E 
 2549      65642069 
 2549      6E7400
 2550              	.LASF14:
 2551 0239 696E7438 		.ascii	"int8\000"
 2551      00
 2552              	.LASF37:
 2553 023e 4144435F 		.ascii	"ADC_StopConvert\000"
 2553      53746F70 
 2553      436F6E76 
 2553      65727400 
 2554              	.LASF68:
 2555 024e 4144435F 		.ascii	"ADC_CalcGain\000"
 2555      43616C63 
 2555      4761696E 
 2555      00
 2556              	.LASF49:
 2557 025b 6D566F6C 		.ascii	"mVolts\000"
 2557      747300
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 64


 2558              	.LASF23:
 2559 0262 72656733 		.ascii	"reg32\000"
 2559      3200
 2560              	.LASF58:
 2561 0268 4144435F 		.ascii	"ADC_shift\000"
 2561      73686966 
 2561      7400
 2562              	.LASF17:
 2563 0272 666C6F61 		.ascii	"float32\000"
 2563      74333200 
 2564              	.LASF9:
 2565 027a 73697A65 		.ascii	"sizetype\000"
 2565      74797065 
 2565      00
 2566              	.LASF40:
 2567 0283 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2567      4973456E 
 2567      64436F6E 
 2567      76657273 
 2567      696F6E00 
 2568              	.LASF67:
 2569 0297 433A5C55 		.ascii	"C:\\Users\\Digi-Key\\Documents\\PSoC Creator\\Desig"
 2569      73657273 
 2569      5C446967 
 2569      692D4B65 
 2569      795C446F 
 2570 02c5 6E31325C 		.ascii	"n12\\Design12.cydsn\000"
 2570      44657369 
 2570      676E3132 
 2570      2E637964 
 2570      736E00
 2571              	.LASF69:
 2572 02d8 4144435F 		.ascii	"ADC_GetResult8\000"
 2572      47657452 
 2572      6573756C 
 2572      743800
 2573              	.LASF62:
 2574 02e7 4144435F 		.ascii	"ADC_theACLK_SetModeRegister\000"
 2574      74686541 
 2574      434C4B5F 
 2574      5365744D 
 2574      6F646552 
 2575              	.LASF33:
 2576 0303 4144435F 		.ascii	"ADC_SetResolution\000"
 2576      53657452 
 2576      65736F6C 
 2576      7574696F 
 2576      6E00
 2577              	.LASF20:
 2578 0315 696E7436 		.ascii	"int64\000"
 2578      3400
 2579              	.LASF63:
 2580 031b 4379496E 		.ascii	"CyIntSetPriority\000"
 2580      74536574 
 2580      5072696F 
 2580      72697479 
 2580      00
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 65


 2581              	.LASF44:
 2582 032c 4144435F 		.ascii	"ADC_SetGain\000"
 2582      53657447 
 2582      61696E00 
 2583              	.LASF18:
 2584 0338 666C6F61 		.ascii	"float\000"
 2584      7400
 2585              	.LASF47:
 2586 033e 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2586      436F756E 
 2586      7473546F 
 2586      5F6D566F 
 2586      6C747300 
 2587              	.LASF32:
 2588 0352 706F7765 		.ascii	"power\000"
 2588      7200
 2589              	.LASF21:
 2590 0358 72656738 		.ascii	"reg8\000"
 2590      00
 2591              	.LASF59:
 2592 035d 43794861 		.ascii	"CyHalt\000"
 2592      6C7400
 2593              	.LASF2:
 2594 0364 756E7369 		.ascii	"unsigned char\000"
 2594      676E6564 
 2594      20636861 
 2594      7200
 2595              	.LASF55:
 2596 0372 4144435F 		.ascii	"ADC_offset\000"
 2596      6F666673 
 2596      657400
 2597              	.LASF3:
 2598 037d 73686F72 		.ascii	"short int\000"
 2598      7420696E 
 2598      7400
 2599              	.LASF29:
 2600 0387 4144435F 		.ascii	"ADC_Stop\000"
 2600      53746F70 
 2600      00
 2601              	.LASF31:
 2602 0390 7265736F 		.ascii	"resolution\000"
 2602      6C757469 
 2602      6F6E00
 2603              	.LASF46:
 2604 039b 4144435F 		.ascii	"ADC_SetScaledGain\000"
 2604      53657453 
 2604      63616C65 
 2604      64476169 
 2604      6E00
 2605              	.LASF10:
 2606 03ad 63686172 		.ascii	"char\000"
 2606      00
 2607              	.LASF24:
 2608 03b2 63796973 		.ascii	"cyisraddress\000"
 2608      72616464 
 2608      72657373 
 2608      00
ARM GAS  C:\Users\Digi-Key\AppData\Local\Temp\ccWaxdFd.s 			page 66


 2609              	.LASF43:
 2610 03bf 6F666673 		.ascii	"offset\000"
 2610      657400
 2611              	.LASF48:
 2612 03c6 61646343 		.ascii	"adcCounts\000"
 2612      6F756E74 
 2612      7300
 2613              	.LASF27:
 2614 03d0 656E6162 		.ascii	"enableInterrupts\000"
 2614      6C65496E 
 2614      74657272 
 2614      75707473 
 2614      00
 2615              	.LASF28:
 2616 03e1 4144435F 		.ascii	"ADC_Enable\000"
 2616      456E6162 
 2616      6C6500
 2617              	.LASF15:
 2618 03ec 696E7431 		.ascii	"int16\000"
 2618      3600
 2619              	.LASF42:
 2620 03f2 4144435F 		.ascii	"ADC_SetOffset\000"
 2620      5365744F 
 2620      66667365 
 2620      7400
 2621              	.LASF26:
 2622 0400 746D7052 		.ascii	"tmpReg\000"
 2622      656700
 2623              	.LASF41:
 2624 0407 4144435F 		.ascii	"ADC_GetResult16\000"
 2624      47657452 
 2624      6573756C 
 2624      74313600 
 2625              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
